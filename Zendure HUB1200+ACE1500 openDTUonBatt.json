[
  {
    "id": "9c6378522119080a",
    "type": "subflow",
    "name": "Sonnenzeiten mit Offset",
    "info": "",
    "category": "",
    "in": [],
    "out": [],
    "env": [],
    "meta": {},
    "color": "#DDAA99"
  },
  {
    "id": "5b8992c4d7e3e731",
    "type": "sun-position",
    "z": "9c6378522119080a",
    "name": "Sonnenzeiten",
    "positionConfig": "2b7c76430a77fa76",
    "rules": [],
    "onlyOnChange": "true",
    "topic": "Sonnenzeiten",
    "outputs": 1,
    "start": "",
    "startType": "none",
    "startOffset": 0,
    "startOffsetType": "none",
    "startOffsetMultiplier": 60000,
    "end": "",
    "endType": "none",
    "endOffset": 0,
    "endOffsetType": "none",
    "endOffsetMultiplier": 60000,
    "x": 440,
    "y": 80,
    "wires": [
      [
        "675030554ac08fc9"
      ]
    ]
  },
  {
    "id": "675030554ac08fc9",
    "type": "function",
    "z": "9c6378522119080a",
    "name": "Sonnenzeiten",
    "func": "// üõ°Ô∏è Sicherheitscheck: Sind die Sonnenzeiten da?\nif (!msg.payload || !msg.payload.times || !msg.payload.times.sunriseEnd || !msg.payload.times.sunsetStart) {\n    node.warn(\"Sonnenzeiten fehlen oder sind nicht korrekt strukturiert.\");\n    return null; // ‚õî Abbruch, wenn Daten fehlen\n}\n\n// üåç Hole UTC-Zeitpunkte aus dem Sonnenzeit-Objekt\nlet sunriseUTC = new Date(msg.payload.times.sunriseEnd.value);   // z.B. \"2025-10-01T05:38:08.372Z\"\nlet sunsetUTC  = new Date(msg.payload.times.sunsetStart.value);  // z.B. \"2025-10-01T17:10:09.433Z\"\n\n// üïí Wandle in lokale Zeit (Europe/Berlin), ohne Sekunden\nlet sunriseStr = sunriseUTC.toLocaleTimeString(\"de-DE\", {\n    timeZone: \"Europe/Berlin\",\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n});\n\nlet sunsetStr = sunsetUTC.toLocaleTimeString(\"de-DE\", {\n    timeZone: \"Europe/Berlin\",\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n});\n\n// üì¶ Schreibe die Uhrzeiten in den globalen Kontext\nglobal.set(\"zendure.sunrise\", sunriseStr); // z.B. \"07:38\"\nglobal.set(\"zendure.sunset\", sunsetStr);   // z.B. \"19:10\"\n\n// üê∏ Gib sie hinten raus, falls du sie brauchst\nmsg.payload = {\n    sunrise: sunriseStr,\n    sunset: sunsetStr\n};\nreturn msg;\n",
    "outputs": 0,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 640,
    "y": 80,
    "wires": []
  },
  {
    "id": "4cb47ff7ab2a37c3",
    "type": "cronplus",
    "z": "9c6378522119080a",
    "name": "Alle 5 Sekunden",
    "outputField": "payload",
    "timeZone": "",
    "storeName": "",
    "commandResponseMsgOutput": "output1",
    "defaultLocation": "",
    "defaultLocationType": "default",
    "outputs": 1,
    "options": [
      {
        "name": "Alle 5 Sekunden",
        "topic": "topic1",
        "payloadType": "default",
        "payload": "",
        "expressionType": "cron",
        "expression": "*/5 * * * * *",
        "location": "",
        "offset": "0",
        "solarType": "all",
        "solarEvents": "sunrise,sunset"
      }
    ],
    "x": 240,
    "y": 160,
    "wires": [
      [
        "32d3c10311d27afa",
        "1881456de78e33b0"
      ]
    ]
  },
  {
    "id": "32d3c10311d27afa",
    "type": "function",
    "z": "9c6378522119080a",
    "name": "Sunsetcalc",
    "func": "// Hole urspr√ºnglichen Sonnenuntergang (String)\nlet sunsetStr = global.get(\"zendure.sunset\"); // z.B. \"19:10\"\n\n// Hole Offset in Minuten (Zahl)\nlet offsetMin = Number(global.get(\"zendure.sunsetoff\")); // z.B. -23\n\n// Validierung\nif (!sunsetStr || !sunsetStr.includes(\":\")) {\n    node.warn(\"Ung√ºltiger sunset-Wert\");\n    return null;\n}\n\n// Umrechnung in Minuten\nlet [hour, minute] = sunsetStr.split(\":\").map(Number);\nlet totalMinutes = hour * 60 + minute + offsetMin;\n\n// Begrenzung auf 0‚Äì1440 Minuten\ntotalMinutes = Math.max(0, Math.min(1440, totalMinutes));\n\n// R√ºckrechnung in HH:MM\nlet newHour = Math.floor(totalMinutes / 60);\nlet newMinute = totalMinutes % 60;\nlet shiftedStr = `${newHour.toString().padStart(2, \"0\")}:${newMinute.toString().padStart(2, \"0\")}`;\n\n// Speichern in global.zendure.sunsetcalc\nglobal.set(\"zendure.sunsetcalc\", shiftedStr);\n\n// Ausgabe zur Kontrolle\nmsg.payload = `‚ö° sunsetcalc: ${shiftedStr} (Offset: ${offsetMin} min)`;\nreturn msg;\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 530,
    "y": 160,
    "wires": [
      []
    ]
  },
  {
    "id": "228aaea8c61c7281",
    "type": "change",
    "z": "9c6378522119080a",
    "name": "Sunset Offset",
    "rules": [
      {
        "t": "set",
        "p": "zendure.sunsetoff",
        "pt": "global",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 940,
    "y": 280,
    "wires": [
      []
    ]
  },
  {
    "id": "f445746b6cd7b250",
    "type": "change",
    "z": "9c6378522119080a",
    "name": "Sunrise Offset",
    "rules": [
      {
        "t": "set",
        "p": "zendure.sunriseoff",
        "pt": "global",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 940,
    "y": 340,
    "wires": [
      []
    ]
  },
  {
    "id": "1881456de78e33b0",
    "type": "function",
    "z": "9c6378522119080a",
    "name": "Sunrisecalc",
    "func": "// Hole urspr√ºnglichen Sonnenaufgang (String)\nlet sunriseStr = global.get(\"zendure.sunrise\"); // z.B. \"07:38\"\n\n// Hole Offset in Minuten (Zahl)\nlet offsetMin = Number(global.get(\"zendure.sunriseoff\")); // z.B. 37\n\n// Validierung\nif (!sunriseStr || !sunriseStr.includes(\":\")) {\n    node.warn(\"Ung√ºltiger sunrise-Wert\");\n    return null;\n}\n\n// Umrechnung in Minuten\nlet [hour, minute] = sunriseStr.split(\":\").map(Number);\nlet totalMinutes = hour * 60 + minute + offsetMin;\n\n// Begrenzung auf 0‚Äì1440 Minuten\ntotalMinutes = Math.max(0, Math.min(1440, totalMinutes));\n\n// R√ºckrechnung in HH:MM\nlet newHour = Math.floor(totalMinutes / 60);\nlet newMinute = totalMinutes % 60;\nlet shiftedStr = `${newHour.toString().padStart(2, \"0\")}:${newMinute.toString().padStart(2, \"0\")}`;\n\n// Speichern in global.zendure.sunrisecalc\nglobal.set(\"zendure.sunrisecalc\", shiftedStr);\n\n// Ausgabe zur Kontrolle\nmsg.payload = `‚ö° sunrisecalc: ${shiftedStr} (Offset: ${offsetMin} min)`;\nreturn msg;\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 530,
    "y": 200,
    "wires": [
      []
    ]
  },
  {
    "id": "fcd9245c95847013",
    "type": "cronplus",
    "z": "9c6378522119080a",
    "name": "Jede Stunde",
    "outputField": "payload",
    "timeZone": "",
    "storeName": "",
    "commandResponseMsgOutput": "output1",
    "defaultLocation": "",
    "defaultLocationType": "default",
    "outputs": 1,
    "options": [
      {
        "name": "Jede Stunde",
        "topic": "topic1",
        "payloadType": "default",
        "payload": "",
        "expressionType": "cron",
        "expression": "0 0 * * * ? *",
        "location": "",
        "offset": "0",
        "solarType": "all",
        "solarEvents": "sunrise,sunset"
      }
    ],
    "x": 230,
    "y": 80,
    "wires": [
      [
        "5b8992c4d7e3e731"
      ]
    ]
  },
  {
    "id": "d20f06570400fc35",
    "type": "ui-slider",
    "z": "9c6378522119080a",
    "group": "5bb06bcb4ba06d8f",
    "name": "Sonnenuntergang Offset ",
    "label": "Sonnenuntergang Offset ",
    "tooltip": "",
    "order": 4,
    "width": 0,
    "height": 0,
    "passthru": false,
    "outs": "end",
    "topic": "payload",
    "topicType": "msg",
    "thumbLabel": "true",
    "showTicks": "always",
    "min": "-90",
    "max": "90",
    "step": 1,
    "className": "",
    "iconPrepend": "",
    "iconAppend": "",
    "color": "",
    "colorTrack": "",
    "colorThumb": "",
    "showTextField": false,
    "x": 710,
    "y": 280,
    "wires": [
      [
        "228aaea8c61c7281"
      ]
    ]
  },
  {
    "id": "5792d1d125fe925a",
    "type": "ui-slider",
    "z": "9c6378522119080a",
    "group": "5bb06bcb4ba06d8f",
    "name": "Sonnenaufgang Offset ",
    "label": "Sonnenaufgang Offset ",
    "tooltip": "",
    "order": 3,
    "width": 0,
    "height": 0,
    "passthru": false,
    "outs": "end",
    "topic": "payload",
    "topicType": "msg",
    "thumbLabel": "true",
    "showTicks": "always",
    "min": "-90",
    "max": "90",
    "step": 1,
    "className": "",
    "iconPrepend": "",
    "iconAppend": "",
    "color": "",
    "colorTrack": "",
    "colorThumb": "",
    "showTextField": false,
    "x": 700,
    "y": 340,
    "wires": [
      [
        "f445746b6cd7b250"
      ]
    ]
  },
  {
    "id": "ef346f8d9d302fd2",
    "type": "cronplus",
    "z": "9c6378522119080a",
    "name": "Alle 5 Sekunden",
    "outputField": "payload",
    "timeZone": "",
    "storeName": "",
    "commandResponseMsgOutput": "output1",
    "defaultLocation": "",
    "defaultLocationType": "default",
    "outputs": 1,
    "options": [
      {
        "name": "Alle 5 Sekunden",
        "topic": "topic1",
        "payloadType": "default",
        "payload": "",
        "expressionType": "cron",
        "expression": "*/5 * * * * *",
        "location": "",
        "offset": "0",
        "solarType": "all",
        "solarEvents": "sunrise,sunset"
      }
    ],
    "x": 220,
    "y": 300,
    "wires": [
      [
        "248e7176282ab6dd",
        "39e5643c5f376a35"
      ]
    ]
  },
  {
    "id": "39e5643c5f376a35",
    "type": "change",
    "z": "9c6378522119080a",
    "name": "Sunrise Offs",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "zendure.sunriseoff",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 490,
    "y": 340,
    "wires": [
      [
        "5792d1d125fe925a"
      ]
    ]
  },
  {
    "id": "248e7176282ab6dd",
    "type": "change",
    "z": "9c6378522119080a",
    "name": "Sunset Offs",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "zendure.sunsetoff",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 490,
    "y": 280,
    "wires": [
      [
        "d20f06570400fc35"
      ]
    ]
  },
  {
    "id": "2b7c76430a77fa76",
    "type": "position-config",
    "name": "Zuhause",
    "isValide": "true",
    "angleType": "deg",
    "timeZoneOffset": 99,
    "timeZoneDST": 0,
    "stateTimeFormat": "3",
    "stateDateFormat": "12",
    "contextStore": "default",
    "sunPositions": [],
    "predefAngles": []
  },
  {
    "id": "5bb06bcb4ba06d8f",
    "type": "ui-group",
    "name": "Regler",
    "page": "8463f458a494140b",
    "width": "6",
    "height": "1",
    "order": 1,
    "showTitle": true,
    "className": "",
    "visible": "true",
    "disabled": "false",
    "groupType": "default"
  },
  {
    "id": "937d276173bef4fb",
    "type": "subflow",
    "name": "Zendure Basemode",
    "info": "",
    "category": "",
    "in": [],
    "out": [],
    "env": [],
    "meta": {},
    "color": "#DDAA99",
    "status": {
      "x": 580,
      "y": 180,
      "wires": [
        {
          "id": "4b3ac491c2054e33",
          "port": 0
        },
        {
          "id": "4b3ac491c2054e33",
          "port": 1
        }
      ]
    }
  },
  {
    "id": "4b3ac491c2054e33",
    "type": "switch",
    "z": "937d276173bef4fb",
    "name": "True of False ",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 450,
    "y": 100,
    "wires": [
      [
        "18db28fb9d005cab"
      ],
      [
        "545cc1a5b1e5f903"
      ]
    ]
  },
  {
    "id": "18db28fb9d005cab",
    "type": "change",
    "z": "937d276173bef4fb",
    "name": "Basismodus Flag True",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.basemode",
        "pt": "global",
        "to": "true",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 660,
    "y": 80,
    "wires": [
      []
    ]
  },
  {
    "id": "545cc1a5b1e5f903",
    "type": "change",
    "z": "937d276173bef4fb",
    "name": "Basismodus Flag True",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.basemode",
        "pt": "global",
        "to": "false",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 660,
    "y": 120,
    "wires": [
      []
    ]
  },
  {
    "id": "d613753b3d18fd58",
    "type": "ui-switch",
    "z": "937d276173bef4fb",
    "name": "Basismodus",
    "label": "Basismodus",
    "group": "742c66c7811281cc",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": false,
    "decouple": false,
    "topic": "topic",
    "topicType": "msg",
    "style": "",
    "className": "",
    "layout": "row-spread",
    "clickableArea": "switch",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "x": 270,
    "y": 100,
    "wires": [
      [
        "4b3ac491c2054e33"
      ]
    ]
  },
  {
    "id": "742c66c7811281cc",
    "type": "ui-group",
    "name": "Schalter",
    "page": "8463f458a494140b",
    "width": "6",
    "height": "1",
    "order": 2,
    "showTitle": true,
    "className": "",
    "visible": "true",
    "disabled": "false",
    "groupType": "default"
  },
  {
    "id": "8463f458a494140b",
    "type": "ui-page",
    "name": "Steuerung",
    "ui": "7bc5187fae6c8993",
    "path": "/page1",
    "icon": "home",
    "layout": "grid",
    "theme": "f89371bfc5dd5a0e",
    "breakpoints": [
      {
        "name": "Default",
        "px": "0",
        "cols": "3"
      },
      {
        "name": "Tablet",
        "px": "576",
        "cols": "6"
      },
      {
        "name": "Small Desktop",
        "px": "768",
        "cols": "9"
      },
      {
        "name": "Desktop",
        "px": "1024",
        "cols": "12"
      }
    ],
    "order": 2,
    "className": "",
    "visible": "true",
    "disabled": "false"
  },
  {
    "id": "7bc5187fae6c8993",
    "type": "ui-base",
    "name": "Zendure Solarflow",
    "path": "/dashboard",
    "appIcon": "https://www.zendure.de/cdn/shop/articles/1200.png?v=1718073709",
    "includeClientData": true,
    "acceptsClientConfig": [
      "ui-notification",
      "ui-control"
    ],
    "showPathInSidebar": false,
    "headerContent": "dashboard",
    "navigationStyle": "default",
    "titleBarStyle": "default",
    "showReconnectNotification": true,
    "notificationDisplayTime": "1",
    "showDisconnectNotification": true,
    "allowInstall": true
  },
  {
    "id": "f89371bfc5dd5a0e",
    "type": "ui-theme",
    "name": "Dark Theme",
    "colors": {
      "surface": "#1f2933",
      "primary": "#1f2933",
      "bgPage": "#111827",
      "groupBg": "#45494f",
      "groupOutline": "#f7f7f8"
    },
    "sizes": {
      "density": "default",
      "pagePadding": "12px",
      "groupGap": "10px",
      "groupBorderRadius": "10px",
      "widgetGap": "20px"
    }
  },
  {
    "id": "0866aef9a251ad7e",
    "type": "subflow",
    "name": "Entladen erlaubt? Flag",
    "info": "",
    "category": "",
    "in": [],
    "out": [],
    "env": [],
    "meta": {},
    "color": "#DDAA99"
  },
  {
    "id": "9b3ff06e126754c1",
    "type": "cronplus",
    "z": "0866aef9a251ad7e",
    "g": "771ff04285e5a5dd",
    "name": "Jede 5 Sekunden",
    "outputField": "payload",
    "timeZone": "",
    "storeName": "",
    "commandResponseMsgOutput": "output1",
    "defaultLocation": "",
    "defaultLocationType": "default",
    "outputs": 1,
    "options": [
      {
        "name": "Jede 5 Sekunden ",
        "topic": "topic1",
        "payloadType": "default",
        "payload": "",
        "expressionType": "cron",
        "expression": "*/5 * * * * * ",
        "location": "",
        "offset": "0",
        "solarType": "all",
        "solarEvents": "sunrise,sunset"
      }
    ],
    "x": 410,
    "y": 240,
    "wires": [
      [
        "1517f43c8f06f55c"
      ]
    ]
  },
  {
    "id": "f959ae2897cb6d0d",
    "type": "switch",
    "z": "0866aef9a251ad7e",
    "g": "771ff04285e5a5dd",
    "name": "Ist Nacht ??",
    "property": "isNight",
    "propertyType": "global",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 1010,
    "y": 280,
    "wires": [
      [
        "0648a860d99ef1e8"
      ],
      [
        "820911013d792ccc"
      ]
    ]
  },
  {
    "id": "0648a860d99ef1e8",
    "type": "change",
    "z": "0866aef9a251ad7e",
    "g": "771ff04285e5a5dd",
    "name": "Entladen erlaubt",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.discharge",
        "pt": "global",
        "to": "true",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1200,
    "y": 180,
    "wires": [
      []
    ]
  },
  {
    "id": "820911013d792ccc",
    "type": "change",
    "z": "0866aef9a251ad7e",
    "g": "771ff04285e5a5dd",
    "name": "Entladen Stop! ",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.discharge",
        "pt": "global",
        "to": "false",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1200,
    "y": 280,
    "wires": [
      []
    ]
  },
  {
    "id": "871d33916c39ae9d",
    "type": "comment",
    "z": "0866aef9a251ad7e",
    "g": "771ff04285e5a5dd",
    "name": "Flag entladen erlaubt! ",
    "info": "",
    "x": 420,
    "y": 180,
    "wires": []
  },
  {
    "id": "bd19d6045998cc12",
    "type": "switch",
    "z": "0866aef9a251ad7e",
    "g": "771ff04285e5a5dd",
    "name": "Full on Day ??",
    "property": "zendure.control.BATTERYFULLONDAY",
    "propertyType": "global",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 840,
    "y": 240,
    "wires": [
      [
        "0648a860d99ef1e8"
      ],
      [
        "f959ae2897cb6d0d"
      ]
    ]
  },
  {
    "id": "1517f43c8f06f55c",
    "type": "switch",
    "z": "0866aef9a251ad7e",
    "g": "771ff04285e5a5dd",
    "name": "Basismodus True ?",
    "property": "zendure.control.basemode",
    "propertyType": "global",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 630,
    "y": 200,
    "wires": [
      [
        "0648a860d99ef1e8"
      ],
      [
        "bd19d6045998cc12"
      ]
    ]
  },
  {
    "id": "771ff04285e5a5dd",
    "type": "group",
    "z": "0866aef9a251ad7e",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "9b3ff06e126754c1",
      "f959ae2897cb6d0d",
      "0648a860d99ef1e8",
      "820911013d792ccc",
      "871d33916c39ae9d",
      "bd19d6045998cc12",
      "1517f43c8f06f55c"
    ],
    "x": 274,
    "y": 139,
    "w": 1032,
    "h": 182
  },
  {
    "id": "157b2b83889624c6",
    "type": "subflow",
    "name": "minSOC bei schlecht Wetter",
    "info": "",
    "category": "",
    "in": [
      {
        "x": 100,
        "y": 100,
        "wires": [
          {
            "id": "1bf971d8f2801d71"
          }
        ]
      }
    ],
    "out": [
      {
        "x": 600,
        "y": 60,
        "wires": [
          {
            "id": "f017b02d0c115210",
            "port": 0
          }
        ]
      },
      {
        "x": 600,
        "y": 140,
        "wires": [
          {
            "id": "1d7210274f4faa39",
            "port": 0
          }
        ]
      }
    ],
    "env": [],
    "meta": {},
    "color": "#DDAA99"
  },
  {
    "id": "1bf971d8f2801d71",
    "type": "switch",
    "z": "157b2b83889624c6",
    "name": "Wenn true/false",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 220,
    "y": 100,
    "wires": [
      [
        "f017b02d0c115210"
      ],
      [
        "1d7210274f4faa39"
      ]
    ]
  },
  {
    "id": "f017b02d0c115210",
    "type": "change",
    "z": "157b2b83889624c6",
    "name": "min SOC auf 10%",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "10",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 450,
    "y": 80,
    "wires": [
      []
    ]
  },
  {
    "id": "1d7210274f4faa39",
    "type": "change",
    "z": "157b2b83889624c6",
    "name": "min SOC 0%",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "0",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 430,
    "y": 120,
    "wires": [
      []
    ]
  },
  {
    "id": "2ee5f1be3938f82f",
    "type": "subflow",
    "name": "low_minVol an Influx",
    "info": "",
    "category": "",
    "in": [
      {
        "x": 60,
        "y": 80,
        "wires": [
          {
            "id": "050365da3f218c80"
          }
        ]
      }
    ],
    "out": [],
    "env": [],
    "meta": {},
    "color": "#DDAA99"
  },
  {
    "id": "050365da3f218c80",
    "type": "function",
    "z": "2ee5f1be3938f82f",
    "name": "low_minVol in Influx",
    "func": "// üìå Measurement-Name direkt in msg.measurement setzen\nmsg.measurement = \"BKW-Zendure\";\n\n// ‚úÖ Pr√ºfen, ob der Payload ein Zahlenwert ist\nif (typeof msg.payload === 'number') {\n    // üõ†Ô∏è Hier definierst du das Field: \"Leistung\" ist der Field-Name\n    msg.payload = {\n        low_minVol: msg.payload // ‚Üê Das ist dein Field!\n    };\n\n    // ‚è±Ô∏è Optionaler Zeitstempel\n    msg.timestamp = new Date().toISOString();\n} else {\n    // ‚ö†Ô∏è Fehlerbehandlung\n    msg.payload = {\n        error: \"Ung√ºltiger Payload ‚Äì erwartet wurde eine Zahl\"\n    };\n}\n\nreturn msg;\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 230,
    "y": 80,
    "wires": [
      [
        "5ce67fe20f47188f"
      ]
    ]
  },
  {
    "id": "5ce67fe20f47188f",
    "type": "influxdb out",
    "z": "2ee5f1be3938f82f",
    "influxdb": "77b430ebcf204c80",
    "name": "",
    "measurement": "",
    "precision": "",
    "retentionPolicy": "",
    "database": "database",
    "precisionV18FluxV20": "ms",
    "retentionPolicyV18Flux": "",
    "org": "fellis-org",
    "bucket": "Fellis-Database",
    "x": 450,
    "y": 80,
    "wires": []
  },
  {
    "id": "77b430ebcf204c80",
    "type": "influxdb",
    "hostname": "127.0.0.1",
    "port": "8086",
    "protocol": "http",
    "database": "database",
    "name": "Fellis Muellhalde",
    "usetls": false,
    "tls": "",
    "influxdbVersion": "2.0",
    "url": "http://192.168.2.127:8086",
    "timeout": "10",
    "rejectUnauthorized": true
  },
  {
    "id": "27076a40bd20d054",
    "type": "subflow",
    "name": "Werte f√ºr SOC",
    "info": "",
    "category": "",
    "in": [],
    "out": [
      {
        "x": 1200,
        "y": 180,
        "wires": [
          {
            "id": "d5b8ea136781e275",
            "port": 0
          }
        ]
      }
    ],
    "env": [],
    "meta": {},
    "color": "#DDAA99"
  },
  {
    "id": "acf3ebd427322017",
    "type": "inject",
    "z": "27076a40bd20d054",
    "name": "Alle 10 Sekunden",
    "props": [],
    "repeat": "10",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "x": 230,
    "y": 200,
    "wires": [
      [
        "f13bbfd0d6114fc4",
        "be1af492220d26a5",
        "8b85b7aa837f1008",
        "44d8230cf31b81b8",
        "067e9c4de62331d0",
        "e10673ca60eb6599",
        "0976257b1490519a",
        "d93284df09a62e23",
        "01dea6087399459d",
        "8e2b7c960bc64487"
      ]
    ]
  },
  {
    "id": "f13bbfd0d6114fc4",
    "type": "ioBroker get",
    "z": "27076a40bd20d054",
    "name": "minVol #1",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.minVol",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 460,
    "y": 80,
    "wires": [
      [
        "adb19af001dc28ec"
      ]
    ]
  },
  {
    "id": "be1af492220d26a5",
    "type": "ioBroker get",
    "z": "27076a40bd20d054",
    "name": "maxVol #1",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.maxVol",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 470,
    "y": 120,
    "wires": [
      [
        "adb19af001dc28ec"
      ]
    ]
  },
  {
    "id": "01dea6087399459d",
    "type": "ioBroker get",
    "z": "27076a40bd20d054",
    "name": "Akku Eingang",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.outputPackPower",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 480,
    "y": 420,
    "wires": [
      [
        "adb19af001dc28ec"
      ]
    ]
  },
  {
    "id": "8e2b7c960bc64487",
    "type": "ioBroker get",
    "z": "27076a40bd20d054",
    "name": "Akku Ausgang",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packInputPower",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 480,
    "y": 460,
    "wires": [
      [
        "adb19af001dc28ec"
      ]
    ]
  },
  {
    "id": "8b85b7aa837f1008",
    "type": "ioBroker get",
    "z": "27076a40bd20d054",
    "name": "minVol #2",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.minVol",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 460,
    "y": 160,
    "wires": [
      [
        "adb19af001dc28ec"
      ]
    ]
  },
  {
    "id": "44d8230cf31b81b8",
    "type": "ioBroker get",
    "z": "27076a40bd20d054",
    "name": "maxVol #2",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.maxVol",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 470,
    "y": 200,
    "wires": [
      [
        "adb19af001dc28ec"
      ]
    ]
  },
  {
    "id": "067e9c4de62331d0",
    "type": "ioBroker get",
    "z": "27076a40bd20d054",
    "name": "minVol #3",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.minVol",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 460,
    "y": 240,
    "wires": [
      [
        "adb19af001dc28ec"
      ]
    ]
  },
  {
    "id": "e10673ca60eb6599",
    "type": "ioBroker get",
    "z": "27076a40bd20d054",
    "name": "maxVol #3",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.maxVol",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 470,
    "y": 280,
    "wires": [
      [
        "adb19af001dc28ec"
      ]
    ]
  },
  {
    "id": "0976257b1490519a",
    "type": "ioBroker get",
    "z": "27076a40bd20d054",
    "name": "minVol #4",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.minVol",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 460,
    "y": 320,
    "wires": [
      [
        "adb19af001dc28ec"
      ]
    ]
  },
  {
    "id": "d93284df09a62e23",
    "type": "ioBroker get",
    "z": "27076a40bd20d054",
    "name": "maxVol #4",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.maxVol",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 470,
    "y": 360,
    "wires": [
      [
        "adb19af001dc28ec"
      ]
    ]
  },
  {
    "id": "adb19af001dc28ec",
    "type": "join",
    "z": "27076a40bd20d054",
    "name": "",
    "mode": "custom",
    "build": "object",
    "property": "payload",
    "propertyType": "msg",
    "key": "topic",
    "joiner": "\\n",
    "joinerType": "str",
    "accumulate": false,
    "timeout": "3",
    "count": "10",
    "reduceRight": false,
    "reduceExp": "",
    "reduceInit": "",
    "reduceInitType": "",
    "reduceFixup": "",
    "x": 710,
    "y": 180,
    "wires": [
      [
        "d5b8ea136781e275"
      ]
    ]
  },
  {
    "id": "d5b8ea136781e275",
    "type": "function",
    "z": "27076a40bd20d054",
    "name": "Topics zuweisen und object kreieren",
    "func": "// Input/Output korrigieren (laut deiner Beobachtung)\nlet realInputPower = msg.payload['zendure-solarflow.0.73bkTV.DeviceID.outputPackPower'] || 0;\nlet realOutputPower = msg.payload['zendure-solarflow.0.73bkTV.DeviceID.packInputPower'] || 0;\n\n// Zellspannungen der vier Packs\nlet minVols = [\n    msg.payload['zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.minVol'],\n    msg.payload['zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.minVol'],\n    msg.payload['zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.minVol'],\n    msg.payload['zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.minVol']\n];\n\nlet maxVols = [\n    msg.payload['zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.maxVol'],\n    msg.payload['zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.maxVol'],\n    msg.payload['zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.maxVol'],\n    msg.payload['zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.maxVol']\n];\n\n// Absicherung gegen undefined\nminVols = minVols.filter(v => v !== undefined);\nmaxVols = maxVols.filter(v => v !== undefined);\n\n// Finaler Output\nmsg.payload = {\n    inputPower: realInputPower,\n    outputPower: realOutputPower,\n    lowestMinVol: Math.min(...minVols),\n    highestMaxVol: Math.min(...maxVols),\n    minVols: minVols,\n    maxVols: maxVols\n};\n\nreturn msg;\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 970,
    "y": 180,
    "wires": [
      []
    ]
  },
  {
    "id": "1a6cc5590fe09fd1",
    "type": "subflow",
    "name": "Is Night?",
    "info": "",
    "category": "",
    "in": [],
    "out": [],
    "env": [],
    "meta": {},
    "color": "#DDAA99"
  },
  {
    "id": "af2194de909355f9",
    "type": "function",
    "z": "1a6cc5590fe09fd1",
    "name": "Is Night True/False",
    "func": "// Hole die Sonnenzeit-Werte als Strings (hh:mm) aus den globalen Variablen\nlet sunriseTime = global.get('zendure.sunrisecalc'); // Format hh:mm\nlet sunsetTime  = global.get('zendure.sunsetcalc');  // Format hh:mm\n\n// Absicherung: Pr√ºfe, ob beide Werte korrekt vorhanden sind\nif (!sunriseTime || !sunsetTime || !sunriseTime.includes(':') || !sunsetTime.includes(':')) {\n    node.error(\"Fehler: Sonnenzeitangaben fehlen oder haben ein ung√ºltiges Format.\");\n    return null;\n}\n\n// Aktuelle Zeit\nlet currentTime = new Date();\n\n// Konvertiere die Zeiten in vollst√§ndige Date-Objekte\nlet [sunriseHour, sunriseMinute] = sunriseTime.split(':').map(Number);\nlet sunriseDate = new Date(currentTime.getFullYear(), currentTime.getMonth(), currentTime.getDate(), sunriseHour, sunriseMinute);\n\nlet [sunsetHour, sunsetMinute] = sunsetTime.split(':').map(Number);\nlet sunsetDate = new Date(currentTime.getFullYear(), currentTime.getMonth(), currentTime.getDate(), sunsetHour, sunsetMinute);\n\n// Logik zur Bestimmung von isNight\nif (currentTime >= sunsetDate || currentTime < sunriseDate) {\n    global.set('isNight', true);  // Schreibe das globale Flag\n    node.status({ fill: \"blue\", shape: \"dot\", text: \"Night: true\" });\n} else {\n    global.set('isNight', false); // Schreibe das globale Flag\n    node.status({ fill: \"yellow\", shape: \"dot\", text: \"Night: false\" });\n}\n\n// Keine Ausgabe erforderlich, die Node ist rein funktional\nreturn null;\n",
    "outputs": 0,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 390,
    "y": 120,
    "wires": []
  },
  {
    "id": "a1762162c9559dee",
    "type": "cronplus",
    "z": "1a6cc5590fe09fd1",
    "name": "Jede Minute",
    "outputField": "payload",
    "timeZone": "",
    "storeName": "",
    "commandResponseMsgOutput": "output1",
    "defaultLocation": "",
    "defaultLocationType": "default",
    "outputs": 1,
    "options": [
      {
        "name": "Jede 1 Minute",
        "topic": "topic1",
        "payloadType": "default",
        "payload": "",
        "expressionType": "cron",
        "expression": "0 * * * * ? *",
        "location": "",
        "offset": "0",
        "solarType": "all",
        "solarEvents": "sunrise,sunset"
      }
    ],
    "x": 210,
    "y": 120,
    "wires": [
      [
        "af2194de909355f9"
      ]
    ]
  },
  {
    "id": "a91e5c96595a8e7c",
    "type": "comment",
    "z": "1a6cc5590fe09fd1",
    "name": "Is Night Flag!! ",
    "info": "",
    "x": 210,
    "y": 80,
    "wires": []
  },
  {
    "id": "36a24bbfc53f303a",
    "type": "subflow",
    "name": "Akku leer Flag",
    "info": "",
    "category": "",
    "in": [
      {
        "x": 80,
        "y": 180,
        "wires": [
          {
            "id": "de5608b18e96c3c0"
          },
          {
            "id": "9e820824b60f54c7"
          }
        ]
      }
    ],
    "out": [],
    "env": [],
    "meta": {},
    "color": "#DDAA99"
  },
  {
    "id": "de5608b18e96c3c0",
    "type": "switch",
    "z": "36a24bbfc53f303a",
    "g": "1c0230a51f8b7f49",
    "name": "Ist Akku leer? Flag True!! ",
    "property": "zendure.minVol",
    "propertyType": "global",
    "rules": [
      {
        "t": "lte",
        "v": "zendure.config.low_minVol",
        "vt": "global"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "x": 270,
    "y": 160,
    "wires": [
      [
        "cd7fb9d43dc3d879"
      ]
    ]
  },
  {
    "id": "cd7fb9d43dc3d879",
    "type": "change",
    "z": "36a24bbfc53f303a",
    "g": "1c0230a51f8b7f49",
    "name": "Akku leer Flag auf True!! ",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.BATTERY_EMPTY_flag",
        "pt": "global",
        "to": "true",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 570,
    "y": 160,
    "wires": [
      []
    ]
  },
  {
    "id": "5e19474c97dd3476",
    "type": "change",
    "z": "36a24bbfc53f303a",
    "g": "1c0230a51f8b7f49",
    "name": "Akku wieder bei 30% Flag auf False!!",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.BATTERY_EMPTY_flag",
        "pt": "global",
        "to": "false",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 610,
    "y": 200,
    "wires": [
      []
    ]
  },
  {
    "id": "9e820824b60f54c7",
    "type": "switch",
    "z": "36a24bbfc53f303a",
    "g": "1c0230a51f8b7f49",
    "name": "SOC min 30%? Flag False!!",
    "property": "zendure.SOC",
    "propertyType": "global",
    "rules": [
      {
        "t": "gt",
        "v": "zendure.config.Hysteresis_After_Empty",
        "vt": "global"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "x": 280,
    "y": 200,
    "wires": [
      [
        "5e19474c97dd3476"
      ]
    ]
  },
  {
    "id": "4e48ddfc1a5edf1c",
    "type": "comment",
    "z": "36a24bbfc53f303a",
    "g": "1c0230a51f8b7f49",
    "name": "Akku leer Flag! ",
    "info": "",
    "x": 240,
    "y": 120,
    "wires": []
  },
  {
    "id": "1c0230a51f8b7f49",
    "type": "group",
    "z": "36a24bbfc53f303a",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "de5608b18e96c3c0",
      "cd7fb9d43dc3d879",
      "5e19474c97dd3476",
      "9e820824b60f54c7",
      "4e48ddfc1a5edf1c"
    ],
    "x": 134,
    "y": 79,
    "w": 652,
    "h": 162
  },
  {
    "id": "018119470926c284",
    "type": "subflow",
    "name": "Entladelogik",
    "info": "",
    "category": "",
    "in": [
      {
        "x": 100,
        "y": 160,
        "wires": [
          {
            "id": "82d11feadd50efca"
          }
        ]
      }
    ],
    "out": [
      {
        "x": 1040,
        "y": 140,
        "wires": [
          {
            "id": "4b2f57d673a23d1f",
            "port": 0
          }
        ]
      },
      {
        "x": 1040,
        "y": 180,
        "wires": [
          {
            "id": "30ea0356443b5744",
            "port": 0
          }
        ]
      },
      {
        "x": 1040,
        "y": 220,
        "wires": [
          {
            "id": "bda88acc2feda9ca",
            "port": 0
          }
        ]
      }
    ],
    "env": [],
    "meta": {},
    "color": "#DDAA99"
  },
  {
    "id": "5eaeb6b1d2a3e0e6",
    "type": "switch",
    "z": "018119470926c284",
    "g": "c2fe0461c3bec6af",
    "name": "Entladen erlaubt?",
    "property": "zendure.control.discharge",
    "propertyType": "global",
    "rules": [
      {
        "t": "false"
      },
      {
        "t": "true"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 450,
    "y": 200,
    "wires": [
      [
        "4b2f57d673a23d1f"
      ],
      [
        "7b2e3474255790ae"
      ]
    ]
  },
  {
    "id": "7b2e3474255790ae",
    "type": "switch",
    "z": "018119470926c284",
    "g": "c2fe0461c3bec6af",
    "name": "minVoll Akkuschutz",
    "property": "zendure.control.BATTERY_EMPTY_flag",
    "propertyType": "global",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 670,
    "y": 220,
    "wires": [
      [
        "4b2f57d673a23d1f"
      ],
      [
        "30ea0356443b5744",
        "bda88acc2feda9ca"
      ]
    ]
  },
  {
    "id": "bda88acc2feda9ca",
    "type": "change",
    "z": "018119470926c284",
    "g": "c2fe0461c3bec6af",
    "name": "AC Mode 2",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "2",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 870,
    "y": 240,
    "wires": [
      []
    ]
  },
  {
    "id": "4b2f57d673a23d1f",
    "type": "change",
    "z": "018119470926c284",
    "g": "c2fe0461c3bec6af",
    "name": "Entladung 0",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "0",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 870,
    "y": 160,
    "wires": [
      []
    ]
  },
  {
    "id": "fea2c6c1caed1795",
    "type": "comment",
    "z": "018119470926c284",
    "g": "c2fe0461c3bec6af",
    "name": "Entladelogik",
    "info": "",
    "x": 250,
    "y": 100,
    "wires": []
  },
  {
    "id": "30ea0356443b5744",
    "type": "change",
    "z": "018119470926c284",
    "g": "c2fe0461c3bec6af",
    "name": "Entladeleistung",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "zendure.config.dischargePower",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 880,
    "y": 200,
    "wires": [
      []
    ]
  },
  {
    "id": "82d11feadd50efca",
    "type": "switch",
    "z": "018119470926c284",
    "g": "c2fe0461c3bec6af",
    "name": "Nur laden ?",
    "property": "zendure.control.nur_laden_flag",
    "propertyType": "global",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 250,
    "y": 160,
    "wires": [
      [
        "4b2f57d673a23d1f"
      ],
      [
        "5eaeb6b1d2a3e0e6"
      ]
    ]
  },
  {
    "id": "c2fe0461c3bec6af",
    "type": "group",
    "z": "018119470926c284",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "5eaeb6b1d2a3e0e6",
      "7b2e3474255790ae",
      "bda88acc2feda9ca",
      "4b2f57d673a23d1f",
      "fea2c6c1caed1795",
      "30ea0356443b5744",
      "82d11feadd50efca"
    ],
    "x": 154,
    "y": 59,
    "w": 832,
    "h": 222
  },
  {
    "id": "3e0ce0fb67a10cbe",
    "type": "subflow",
    "name": "Ladelogik",
    "info": "",
    "category": "",
    "in": [
      {
        "x": 440,
        "y": 260,
        "wires": [
          {
            "id": "f83b93bd29408cd9"
          }
        ]
      }
    ],
    "out": [
      {
        "x": 1240,
        "y": 320,
        "wires": [
          {
            "id": "bb1b6e8465ad8f3d",
            "port": 0
          }
        ]
      },
      {
        "x": 1240,
        "y": 240,
        "wires": [
          {
            "id": "32dabfb25c454f59",
            "port": 0
          }
        ]
      },
      {
        "x": 1240,
        "y": 280,
        "wires": [
          {
            "id": "d817146cfcab42b0",
            "port": 0
          }
        ]
      }
    ],
    "env": [],
    "meta": {},
    "color": "#DDAA99"
  },
  {
    "id": "f83b93bd29408cd9",
    "type": "switch",
    "z": "3e0ce0fb67a10cbe",
    "g": "f033a9ec014a6d03",
    "name": "Entladen erlaubt ?",
    "property": "zendure.control.discharge",
    "propertyType": "global",
    "rules": [
      {
        "t": "false"
      },
      {
        "t": "true"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 610,
    "y": 260,
    "wires": [
      [
        "63a15e4c36cc13f8"
      ],
      [
        "bb1b6e8465ad8f3d"
      ]
    ]
  },
  {
    "id": "32dabfb25c454f59",
    "type": "function",
    "z": "3e0ce0fb67a10cbe",
    "g": "f033a9ec014a6d03",
    "name": "Berechnung laden neu",
    "func": "// Globale Konfigwerte\nlet START_AC_LEISTUNG = parseFloat(global.get('zendure.config.START_AC_LEISTUNG')) || 100;\nlet MAX_AC_LEISTUNG   = parseFloat(global.get('zendure.config.MAX_AC_LEISTUNG'))   || 900;\nlet SKALIERUNG        = parseFloat(global.get('zendure.config.SKALIERUNG'))        || 1;\n// Ziel: leichte Einspeisung (negativer Netzbezug), z. B. -100 W\nlet ZIEL_NETZLEISTUNG = parseFloat(global.get('zendure.config.ZIEL_NEGATIVE_LEISTUNG')) || 0;\n\n// Eingangswert: Netzbezug gegl√§ttet (+ = Bezug, ‚Äì = Einspeisung)\nlet currentpower = parseFloat(global.get('zendure.Netzbezug'));\n\n// Sicherheitscheck\nif (!Number.isFinite(currentpower)) {\n    msg.payload = 0;\n    return msg;\n}\nif (!Number.isFinite(SKALIERUNG) || SKALIERUNG === 0) {\n    SKALIERUNG = 1; // Divide-by-zero-Schutz\n}\n\n// Letzte Leistung merken\nlet alteLeistung = context.get('currentACLeistung');\nif (!Number.isFinite(alteLeistung)) {\n    alteLeistung = START_AC_LEISTUNG;\n}\n\n// Regelfehler (Abweichung vom Zielwert)\nlet fehler = currentpower - ZIEL_NETZLEISTUNG;\nlet delta  = fehler / SKALIERUNG;\n\n// Neue Leistung berechnen\nlet neueLeistung = alteLeistung - delta;\n\n// Begrenzen & Runden (100 W Schritte)\nneueLeistung = Math.max(0, Math.min(neueLeistung, MAX_AC_LEISTUNG));\nneueLeistung = Math.round(neueLeistung / 100) * 100;\n\n// Ergebnis speichern\ncontext.set('currentACLeistung', neueLeistung);\nmsg.payload = neueLeistung;\nreturn msg;\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1040,
    "y": 240,
    "wires": [
      []
    ]
  },
  {
    "id": "d817146cfcab42b0",
    "type": "change",
    "z": "3e0ce0fb67a10cbe",
    "g": "f033a9ec014a6d03",
    "name": "AC Mode 1",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "1",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1010,
    "y": 280,
    "wires": [
      []
    ]
  },
  {
    "id": "bb1b6e8465ad8f3d",
    "type": "change",
    "z": "3e0ce0fb67a10cbe",
    "g": "f033a9ec014a6d03",
    "name": "Ladeleistung 0",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "0",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1020,
    "y": 320,
    "wires": [
      []
    ]
  },
  {
    "id": "bacf336852cfc59f",
    "type": "comment",
    "z": "3e0ce0fb67a10cbe",
    "g": "f033a9ec014a6d03",
    "name": "Ladelogik",
    "info": "",
    "x": 580,
    "y": 200,
    "wires": []
  },
  {
    "id": "63a15e4c36cc13f8",
    "type": "switch",
    "z": "3e0ce0fb67a10cbe",
    "g": "f033a9ec014a6d03",
    "name": "Full during Day? ",
    "property": "zendure.control.BATTERYFULLONDAY",
    "propertyType": "global",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 800,
    "y": 240,
    "wires": [
      [
        "bb1b6e8465ad8f3d"
      ],
      [
        "32dabfb25c454f59",
        "d817146cfcab42b0"
      ]
    ]
  },
  {
    "id": "f033a9ec014a6d03",
    "type": "group",
    "z": "3e0ce0fb67a10cbe",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "f83b93bd29408cd9",
      "32dabfb25c454f59",
      "d817146cfcab42b0",
      "bb1b6e8465ad8f3d",
      "bacf336852cfc59f",
      "63a15e4c36cc13f8"
    ],
    "x": 494,
    "y": 159,
    "w": 672,
    "h": 202
  },
  {
    "id": "0dd9ca4658880b98",
    "type": "subflow",
    "name": "Battery Full during Day",
    "info": "",
    "category": "",
    "in": [],
    "out": [],
    "env": [],
    "meta": {},
    "color": "#DDAA99",
    "status": {
      "x": 1020,
      "y": 80,
      "wires": [
        {
          "id": "259919656625319e",
          "port": 0
        },
        {
          "id": "e864de887de0fa61",
          "port": 0
        }
      ]
    }
  },
  {
    "id": "9f8d0e4a779ac79e",
    "type": "ioBroker in",
    "z": "0dd9ca4658880b98",
    "name": "SOC",
    "attrname": "payload",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.electricLevel",
    "payloadType": "value",
    "onlyack": "",
    "func": "all",
    "gap": "",
    "fireOnStart": "false",
    "outFormat": "ioBroker",
    "x": 190,
    "y": 80,
    "wires": [
      [
        "64fb603ed5a0849e"
      ]
    ]
  },
  {
    "id": "b2882eb9ac984f98",
    "type": "switch",
    "z": "0dd9ca4658880b98",
    "name": "Ist SOC 100%",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "100",
        "vt": "num"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "x": 520,
    "y": 60,
    "wires": [
      [
        "259919656625319e"
      ]
    ]
  },
  {
    "id": "64fb603ed5a0849e",
    "type": "switch",
    "z": "0dd9ca4658880b98",
    "name": "Ist Tag?",
    "property": "isNight",
    "propertyType": "global",
    "rules": [
      {
        "t": "false"
      },
      {
        "t": "true"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 340,
    "y": 80,
    "wires": [
      [
        "b2882eb9ac984f98"
      ],
      [
        "e864de887de0fa61"
      ]
    ]
  },
  {
    "id": "259919656625319e",
    "type": "change",
    "z": "0dd9ca4658880b98",
    "name": "Flag SOC 100% am Tag - True!!",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.BATTERYFULLONDAY",
        "pt": "global",
        "to": "true",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 770,
    "y": 60,
    "wires": [
      []
    ]
  },
  {
    "id": "e864de887de0fa61",
    "type": "change",
    "z": "0dd9ca4658880b98",
    "name": "Flag zur√ºck auf false bei Nacht",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.BATTERYFULLONDAY",
        "pt": "global",
        "to": "false",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 770,
    "y": 100,
    "wires": [
      []
    ]
  },
  {
    "id": "229f8f76918d802b",
    "type": "subflow",
    "name": "Zendure Notmodus",
    "info": "",
    "category": "",
    "in": [],
    "out": [
      {
        "x": 1000,
        "y": 260,
        "wires": [
          {
            "id": "3c060abf9544dddf",
            "port": 0
          }
        ]
      },
      {
        "x": 1000,
        "y": 320,
        "wires": [
          {
            "id": "3686715d9e47911f",
            "port": 0
          }
        ]
      },
      {
        "x": 1480,
        "y": 200,
        "wires": [
          {
            "id": "04a6e3a2237b7adf",
            "port": 0
          }
        ]
      },
      {
        "x": 1480,
        "y": 280,
        "wires": [
          {
            "id": "f5a15e1b72424865",
            "port": 0
          }
        ]
      }
    ],
    "env": [],
    "meta": {},
    "color": "#DDAA99"
  },
  {
    "id": "b05cd6c573fc1b81",
    "type": "switch",
    "z": "229f8f76918d802b",
    "g": "3b1f76e3e4b8bb55",
    "name": "Notmodus",
    "property": "zendure.minVol",
    "propertyType": "global",
    "rules": [
      {
        "t": "lte",
        "v": "zendure.config.minVol_critical",
        "vt": "global"
      },
      {
        "t": "gt",
        "v": "zendure.config.minVol_safe",
        "vt": "global"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 670,
    "y": 200,
    "wires": [
      [
        "09ae171a4ad2149a"
      ],
      [
        "bd14a6158ccf9693"
      ]
    ]
  },
  {
    "id": "09ae171a4ad2149a",
    "type": "change",
    "z": "229f8f76918d802b",
    "g": "3b1f76e3e4b8bb55",
    "name": "Flag Notladen true",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.notladen_flag",
        "pt": "global",
        "to": "true",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 850,
    "y": 180,
    "wires": [
      [
        "e4d9c933a9c819af",
        "6a94785e44c705c4"
      ]
    ]
  },
  {
    "id": "b2850c25fed10dd9",
    "type": "cronplus",
    "z": "229f8f76918d802b",
    "g": "3b1f76e3e4b8bb55",
    "name": "Alle 1 Minute",
    "outputField": "payload",
    "timeZone": "",
    "storeName": "",
    "commandResponseMsgOutput": "output1",
    "defaultLocation": "",
    "defaultLocationType": "default",
    "outputs": 1,
    "options": [
      {
        "name": "Jede Minute",
        "topic": "topic1",
        "payloadType": "default",
        "payload": "",
        "expressionType": "cron",
        "expression": "0 * * * * ? *",
        "location": "",
        "offset": "0",
        "solarType": "all",
        "solarEvents": "sunrise,sunset"
      }
    ],
    "x": 230,
    "y": 200,
    "wires": [
      [
        "e041053dbffef74a"
      ]
    ]
  },
  {
    "id": "bd14a6158ccf9693",
    "type": "change",
    "z": "229f8f76918d802b",
    "g": "3b1f76e3e4b8bb55",
    "name": "Flag Notladen false",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.notladen_flag",
        "pt": "global",
        "to": "false",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 850,
    "y": 220,
    "wires": [
      [
        "4ccc932314d073be",
        "9be7cfd9385c1f2b"
      ]
    ]
  },
  {
    "id": "c5fee863fe9b547a",
    "type": "switch",
    "z": "229f8f76918d802b",
    "g": "3b1f76e3e4b8bb55",
    "name": "Gate auf oder zu",
    "property": "zendure.control.notladen_flag",
    "propertyType": "global",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 690,
    "y": 280,
    "wires": [
      [
        "3c060abf9544dddf"
      ],
      [
        "3686715d9e47911f"
      ]
    ]
  },
  {
    "id": "615f1ef982792103",
    "type": "delay",
    "z": "229f8f76918d802b",
    "g": "3b1f76e3e4b8bb55",
    "name": "",
    "pauseType": "delay",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 220,
    "y": 280,
    "wires": [
      [
        "c5fee863fe9b547a"
      ]
    ]
  },
  {
    "id": "3686715d9e47911f",
    "type": "change",
    "z": "229f8f76918d802b",
    "g": "3b1f76e3e4b8bb55",
    "name": "Gate auf",
    "rules": [
      {
        "t": "set",
        "p": "topic",
        "pt": "msg",
        "to": "zendure.control.STOP",
        "tot": "str"
      },
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "open",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 880,
    "y": 300,
    "wires": [
      []
    ]
  },
  {
    "id": "3c060abf9544dddf",
    "type": "change",
    "z": "229f8f76918d802b",
    "g": "3b1f76e3e4b8bb55",
    "name": "Gate zu",
    "rules": [
      {
        "t": "set",
        "p": "topic",
        "pt": "msg",
        "to": "zendure.control.STOP",
        "tot": "str"
      },
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "close",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 880,
    "y": 260,
    "wires": [
      []
    ]
  },
  {
    "id": "7be99ded4354a5da",
    "type": "comment",
    "z": "229f8f76918d802b",
    "g": "3b1f76e3e4b8bb55",
    "name": "Notmodus Ja oder Nein",
    "info": "",
    "x": 240,
    "y": 140,
    "wires": []
  },
  {
    "id": "e4d9c933a9c819af",
    "type": "change",
    "z": "229f8f76918d802b",
    "g": "045918e25cec8abe",
    "name": "AC-Mode 1",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "1",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1150,
    "y": 260,
    "wires": [
      [
        "f5a15e1b72424865"
      ]
    ]
  },
  {
    "id": "6a94785e44c705c4",
    "type": "change",
    "z": "229f8f76918d802b",
    "g": "045918e25cec8abe",
    "name": "Ladeleistung 900W",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "900",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1170,
    "y": 180,
    "wires": [
      [
        "04a6e3a2237b7adf"
      ]
    ]
  },
  {
    "id": "4ccc932314d073be",
    "type": "change",
    "z": "229f8f76918d802b",
    "g": "045918e25cec8abe",
    "name": "Ladeleistung 0W",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "0",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1170,
    "y": 220,
    "wires": [
      [
        "04a6e3a2237b7adf"
      ]
    ]
  },
  {
    "id": "9be7cfd9385c1f2b",
    "type": "change",
    "z": "229f8f76918d802b",
    "g": "045918e25cec8abe",
    "name": "AC-Mode 2",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "2",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1150,
    "y": 300,
    "wires": [
      [
        "f5a15e1b72424865"
      ]
    ]
  },
  {
    "id": "163c16f690679473",
    "type": "comment",
    "z": "229f8f76918d802b",
    "g": "045918e25cec8abe",
    "name": "Setzen der Werte Laden und AC Mode",
    "info": "",
    "x": 1230,
    "y": 140,
    "wires": []
  },
  {
    "id": "e041053dbffef74a",
    "type": "switch",
    "z": "229f8f76918d802b",
    "g": "3b1f76e3e4b8bb55",
    "name": "Manuelles Notladen aus ?",
    "property": "zendure.control.notladen_manuell_flag",
    "propertyType": "global",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 450,
    "y": 200,
    "wires": [
      [
        "09ae171a4ad2149a",
        "615f1ef982792103"
      ],
      [
        "b05cd6c573fc1b81",
        "615f1ef982792103"
      ]
    ]
  },
  {
    "id": "04a6e3a2237b7adf",
    "type": "rbe",
    "z": "229f8f76918d802b",
    "g": "045918e25cec8abe",
    "name": "",
    "func": "rbe",
    "gap": "",
    "start": "",
    "inout": "out",
    "septopics": true,
    "property": "payload",
    "topi": "topic",
    "x": 1350,
    "y": 200,
    "wires": [
      []
    ]
  },
  {
    "id": "f5a15e1b72424865",
    "type": "rbe",
    "z": "229f8f76918d802b",
    "g": "045918e25cec8abe",
    "name": "",
    "func": "rbe",
    "gap": "",
    "start": "",
    "inout": "out",
    "septopics": true,
    "property": "payload",
    "topi": "topic",
    "x": 1350,
    "y": 280,
    "wires": [
      []
    ]
  },
  {
    "id": "3b1f76e3e4b8bb55",
    "type": "group",
    "z": "229f8f76918d802b",
    "name": "",
    "style": {
      "label": true
    },
    "nodes": [
      "b05cd6c573fc1b81",
      "09ae171a4ad2149a",
      "b2850c25fed10dd9",
      "bd14a6158ccf9693",
      "c5fee863fe9b547a",
      "615f1ef982792103",
      "3686715d9e47911f",
      "3c060abf9544dddf",
      "7be99ded4354a5da",
      "e041053dbffef74a"
    ],
    "x": 114,
    "y": 99,
    "w": 852,
    "h": 242
  },
  {
    "id": "045918e25cec8abe",
    "type": "group",
    "z": "229f8f76918d802b",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "e4d9c933a9c819af",
      "6a94785e44c705c4",
      "4ccc932314d073be",
      "9be7cfd9385c1f2b",
      "163c16f690679473",
      "04a6e3a2237b7adf",
      "f5a15e1b72424865"
    ],
    "x": 1054,
    "y": 99,
    "w": 372,
    "h": 242
  },
  {
    "id": "a11fc357385c8d20",
    "type": "subflow",
    "name": "Zendure Werte holen",
    "info": "",
    "category": "",
    "in": [
      {
        "x": 300,
        "y": 640,
        "wires": [
          {
            "id": "cb0fcd974efebbf1"
          },
          {
            "id": "a66522e3d83138ac"
          },
          {
            "id": "8c752b79a46ee569"
          },
          {
            "id": "52d5ab1c3cab921f"
          },
          {
            "id": "38a2be624f06ba3f"
          },
          {
            "id": "af8730c6ef545b8c"
          },
          {
            "id": "bcc5f8600bf04880"
          },
          {
            "id": "ff651a6be5a588b3"
          },
          {
            "id": "920ce546daa02479"
          },
          {
            "id": "96eb74ded68843b8"
          },
          {
            "id": "166fafc471fe6584"
          },
          {
            "id": "a93cec0e0daf9cd7"
          },
          {
            "id": "2d44b696286dbe05"
          },
          {
            "id": "09f8a4f5e7ad793b"
          },
          {
            "id": "ad162e5da96c5f58"
          },
          {
            "id": "af3934044ad6f922"
          },
          {
            "id": "bc4d71b6118f2209"
          },
          {
            "id": "f35a3e10bf9a72d4"
          },
          {
            "id": "1e317a8cd663a53d"
          },
          {
            "id": "84b874fe851c4049"
          },
          {
            "id": "33157231867a5619"
          },
          {
            "id": "7973b0d5faa72207"
          }
        ]
      }
    ],
    "out": [],
    "env": [],
    "meta": {},
    "color": "#DDAA99"
  },
  {
    "id": "cb0fcd974efebbf1",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "batteryLevel",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.electricLevel",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 470,
    "y": 100,
    "wires": [
      [
        "b7156835bbac8d18"
      ]
    ]
  },
  {
    "id": "8c752b79a46ee569",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "sunsetTimestamp",
    "topic": "shuttercontrol.0.info.GoldenHour",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 490,
    "y": 280,
    "wires": [
      [
        "d86ca0c0d8829c04"
      ]
    ]
  },
  {
    "id": "33980d7cf63cb02d",
    "type": "comment",
    "z": "a11fc357385c8d20",
    "name": "Werte auslesen",
    "info": "",
    "x": 480,
    "y": 60,
    "wires": []
  },
  {
    "id": "52d5ab1c3cab921f",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "sunriseTimestamp",
    "topic": "0_userdata.0.PV-Daten.GoldenHourEnd+90",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 490,
    "y": 340,
    "wires": [
      [
        "962f479a7b0599f2"
      ]
    ]
  },
  {
    "id": "38a2be624f06ba3f",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Aktuelle Leistung BKW",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.solarInputPower",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 500,
    "y": 400,
    "wires": [
      [
        "3595baaf5c65ccb1"
      ]
    ]
  },
  {
    "id": "af8730c6ef545b8c",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Zustand AC Modus",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.control.acMode",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 490,
    "y": 460,
    "wires": [
      [
        "f1c1175fbc44619b"
      ]
    ]
  },
  {
    "id": "bcc5f8600bf04880",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Aktuelle AC Leistung",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.inputLimit",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 500,
    "y": 520,
    "wires": [
      [
        "0d88201949632c2d"
      ]
    ]
  },
  {
    "id": "a66522e3d83138ac",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Netzbezug gegl√§ttet",
    "topic": "0_userdata.0.PV-Daten.Netzbezug-gegl",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 500,
    "y": 160,
    "wires": [
      [
        "46aa51cf53ad89f7"
      ]
    ]
  },
  {
    "id": "ff651a6be5a588b3",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "SOC #1",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.socLevel",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 460,
    "y": 580,
    "wires": [
      [
        "f66f6d6c791828c9"
      ]
    ]
  },
  {
    "id": "920ce546daa02479",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "SOC #2",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.socLevel",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 460,
    "y": 640,
    "wires": [
      [
        "a84d6c465be292da"
      ]
    ]
  },
  {
    "id": "96eb74ded68843b8",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "SOC #3",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.socLevel",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 460,
    "y": 700,
    "wires": [
      [
        "e27bc9db633fa7d3"
      ]
    ]
  },
  {
    "id": "b7156835bbac8d18",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"SOC\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 100,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "46aa51cf53ad89f7",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"Netzbezug_gel√§ttet\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 160,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "d86ca0c0d8829c04",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"sunsetTimestamp\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 280,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "962f479a7b0599f2",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"sunriseTimestamp\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 340,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "03feb985d9689bdb",
    "type": "comment",
    "z": "a11fc357385c8d20",
    "name": "Topic an msg ",
    "info": "",
    "x": 750,
    "y": 60,
    "wires": []
  },
  {
    "id": "3595baaf5c65ccb1",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"PV_Power\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 400,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "f1c1175fbc44619b",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"switchState_AC\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 460,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "0d88201949632c2d",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"AC_Power\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 520,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "f66f6d6c791828c9",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"SOC_1\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 580,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "a84d6c465be292da",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"SOC_2\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 640,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "e27bc9db633fa7d3",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"SOC_3\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 700,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "1b118b8cc2342210",
    "type": "join",
    "z": "a11fc357385c8d20",
    "name": "",
    "mode": "custom",
    "build": "object",
    "property": "payload",
    "propertyType": "msg",
    "key": "topic",
    "joiner": "\\n",
    "joinerType": "str",
    "accumulate": false,
    "timeout": "6",
    "count": "23",
    "reduceRight": false,
    "reduceExp": "",
    "reduceInit": "",
    "reduceInitType": "",
    "reduceFixup": "",
    "x": 990,
    "y": 360,
    "wires": [
      [
        "6c111e9cea92b87e"
      ]
    ]
  },
  {
    "id": "26367c7c1abdaca9",
    "type": "comment",
    "z": "a11fc357385c8d20",
    "name": "Zusammenfassen der msg",
    "info": "",
    "x": 1050,
    "y": 320,
    "wires": []
  },
  {
    "id": "a93cec0e0daf9cd7",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Zellspannung minVol #1",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.minVol",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 510,
    "y": 820,
    "wires": [
      [
        "e66f8535a51b54c7"
      ]
    ]
  },
  {
    "id": "e66f8535a51b54c7",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"minVol#1\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 820,
    "wires": [
      [
        "7ed66a10631370b2",
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "af3934044ad6f922",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Aktuelles Output Limit",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.outputLimit",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 500,
    "y": 1060,
    "wires": [
      [
        "8d704295f0daacf4"
      ]
    ]
  },
  {
    "id": "8d704295f0daacf4",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"OutputLimit\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1060,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "166fafc471fe6584",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "SOC #4",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.socLevel",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 460,
    "y": 760,
    "wires": [
      [
        "19c53e4e5726edbb"
      ]
    ]
  },
  {
    "id": "19c53e4e5726edbb",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"SOC_4\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 760,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "2d44b696286dbe05",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Zellspannung minVol #2",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.minVol",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 510,
    "y": 880,
    "wires": [
      [
        "a609709d91db64c2"
      ]
    ]
  },
  {
    "id": "a609709d91db64c2",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"minVol#2\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 880,
    "wires": [
      [
        "7ed66a10631370b2",
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "09f8a4f5e7ad793b",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Zellspannung minVol #3",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.minVol",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 510,
    "y": 940,
    "wires": [
      [
        "69d98c6b59836abd"
      ]
    ]
  },
  {
    "id": "69d98c6b59836abd",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"minVol#3\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 940,
    "wires": [
      [
        "7ed66a10631370b2",
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "ad162e5da96c5f58",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Zellspannung minVol #4",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packData.BatterySN.minVol",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 510,
    "y": 1000,
    "wires": [
      [
        "0714255a3ded3a1a"
      ]
    ]
  },
  {
    "id": "0714255a3ded3a1a",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"minVol#4\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1000,
    "wires": [
      [
        "7ed66a10631370b2",
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "7ed66a10631370b2",
    "type": "join",
    "z": "a11fc357385c8d20",
    "name": "",
    "mode": "custom",
    "build": "object",
    "property": "payload",
    "propertyType": "msg",
    "key": "topic",
    "joiner": "\\n",
    "joinerType": "str",
    "accumulate": false,
    "timeout": "2",
    "count": "4",
    "reduceRight": false,
    "reduceExp": "",
    "reduceInit": "",
    "reduceInitType": "",
    "reduceFixup": "",
    "x": 990,
    "y": 880,
    "wires": [
      [
        "62e5afe5cfbd4c89"
      ]
    ]
  },
  {
    "id": "62e5afe5cfbd4c89",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "minVol berrechnen",
    "func": "// Extrahiere die vier minVol-Werte aus msg.payload\nlet p = msg.payload;\n\nlet minVols = [\n    p[\"minVol#1\"],\n    p[\"minVol#2\"],\n    p[\"minVol#3\"],\n    p[\"minVol#4\"]\n];\n\n// Berechne das Minimum\nlet minValue = Math.min(...minVols.map(Number));\n\n// Gib das Ergebnis zur√ºck\nmsg.topic = \"minVol\";\nmsg.payload = minValue;\n\nreturn msg;\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1170,
    "y": 880,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "bc4d71b6118f2209",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Netzbezug",
    "topic": "sonoff.0.Stromzaehler.SML_Power_curr",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 470,
    "y": 220,
    "wires": [
      [
        "34acba10f8cd94d1"
      ]
    ]
  },
  {
    "id": "34acba10f8cd94d1",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"Netzbezug\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 220,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "6c111e9cea92b87e",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Werte in global Kontext",
    "func": "// Hole alle Schl√ºssel aus msg.payload\nfor (let key in msg.payload) {\n    if (msg.payload.hasOwnProperty(key)) {\n        // Schreibe jeden Wert in den globalen Kontext mit Prefix \"zendure.\"\n        global.set(\"zendure.\" + key, msg.payload[key]);\n    }\n}\n\n// Optional: Best√§tigungsausgabe\nmsg.topic = \"zendure.contextUpdate\";\nmsg.payload = \"Alle Variablen wurden global gespeichert.\";\n\nreturn msg;\n",
    "outputs": 0,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1190,
    "y": 400,
    "wires": []
  },
  {
    "id": "f35a3e10bf9a72d4",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "minSOC",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.minSoc",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 460,
    "y": 1120,
    "wires": [
      [
        "ae75f180bd91e3c7"
      ]
    ]
  },
  {
    "id": "ae75f180bd91e3c7",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"minSOC\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1120,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "1e317a8cd663a53d",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Bypass State",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.pass",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 470,
    "y": 1180,
    "wires": [
      [
        "ace90c66e61a3921"
      ]
    ]
  },
  {
    "id": "ace90c66e61a3921",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"ByPass_state\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1180,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "84b874fe851c4049",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "GridInput ACE",
    "topic": "zendure-solarflow.0.8bM93H.wUxP07B9.gridInputPower",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 480,
    "y": 1240,
    "wires": [
      [
        "16d22f2cc701de3d"
      ]
    ]
  },
  {
    "id": "16d22f2cc701de3d",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"gridInput_ACE\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1240,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "33157231867a5619",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Eingangsleistung Akku",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.outputPackPower",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 500,
    "y": 1300,
    "wires": [
      [
        "0d64482bc0718f80"
      ]
    ]
  },
  {
    "id": "0d64482bc0718f80",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"BatteryIn\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1300,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "7973b0d5faa72207",
    "type": "ioBroker get",
    "z": "a11fc357385c8d20",
    "name": "Ausgangsleistung Akku",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.packInputPower",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 510,
    "y": 1360,
    "wires": [
      [
        "542baad690d0a7f0"
      ]
    ]
  },
  {
    "id": "542baad690d0a7f0",
    "type": "function",
    "z": "a11fc357385c8d20",
    "name": "Message",
    "func": "msg.topic = \"BatteryOut\"\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1360,
    "wires": [
      [
        "1b118b8cc2342210"
      ]
    ]
  },
  {
    "id": "d9a9ebbb2cc5d793",
    "type": "tab",
    "label": "Zendure Solarflow",
    "disabled": false,
    "locked": true,
    "info": "",
    "env": []
  },
  {
    "id": "d7c9f74f14ee5925",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "208905654b3abb92",
      "ebbc9e3ed43cad5e",
      "457cf316a9564b5c",
      "e6bebda843d10ddd",
      "2d90f7135788fd76",
      "b57f83d8548840fe"
    ],
    "x": 114,
    "y": 739,
    "w": 302,
    "h": 202
  },
  {
    "id": "b265d3155c6e797b",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "1396e7f0a66298f5",
      "5f04efc617fee11d",
      "ac22c3a15f0e2f7e",
      "ffda41c56ad9e102",
      "ce19a9d77a464f41",
      "eb504a31e8cd1553",
      "4c641c1d8f1355c1",
      "7aaa1e36f00a62ea",
      "0850ef020662156c",
      "4b953a919045accc",
      "337df6208901fc0a",
      "1b0c1e3615ebcb5b",
      "f518e09a1aa2d749"
    ],
    "x": 614,
    "y": 199,
    "w": 492,
    "h": 362
  },
  {
    "id": "bbca50b38d2e4366",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "2415c1234eb286ad",
      "9d100687894abafe"
    ],
    "x": 954,
    "y": 579,
    "w": 252,
    "h": 142
  },
  {
    "id": "ba4e364f0c1f0541",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "cfdbab4862ea8893",
      "f432d14e4dc5dd22",
      "0c0797302b95074c"
    ],
    "x": 614,
    "y": 39,
    "w": 412,
    "h": 142
  },
  {
    "id": "85403893f7aaf1b2",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "f7c953c02d701c1b",
      "1b26e0e465d1fd67",
      "188b9b4e8981c3a2",
      "4517da5bdf41e5a1",
      "40b0b8e9ff855d60",
      "61632dd82147fa95",
      "e9f5b4425b5db465"
    ],
    "x": 114,
    "y": 39,
    "w": 472,
    "h": 242
  },
  {
    "id": "88d163abbff08ff7",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "557e8189af5e7007",
      "7b4e6e82c33eff58",
      "42633d37c766a79f",
      "c15edfb616545c97",
      "e6d5936f07a10fa8",
      "c1fb8d6cf27ea2dd"
    ],
    "x": 114,
    "y": 299,
    "w": 342,
    "h": 202
  },
  {
    "id": "b075c69001683870",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "886b857c6d685275",
      "6ccbe695c1eea1f0",
      "e40c113946739512",
      "17f1d8ef6bf07edd",
      "046fc5d8ef7b11fd",
      "679e69a9cb0c03d3"
    ],
    "x": 114,
    "y": 519,
    "w": 322,
    "h": 202
  },
  {
    "id": "bbc8e4e93fa431e9",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "2ce21b803deebbdb",
      "ab581234fdec20ef",
      "22ea6f1c3f65a00f"
    ],
    "x": 614,
    "y": 719,
    "w": 272,
    "h": 142
  },
  {
    "id": "444896c9d0a34a39",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "73d2f3f7ba050580",
      "f4d717d86ddb6b77"
    ],
    "x": 614,
    "y": 579,
    "w": 192,
    "h": 122
  },
  {
    "id": "3fe1ac87b9fb2c8f",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "2062a2e82b5079d7",
      "96c2cc0fe92af8b9",
      "531a017d6bffcdb6",
      "d17a00ce5382cac1",
      "5fa75cf2d89721da"
    ],
    "x": 1234,
    "y": 59,
    "w": 452,
    "h": 182
  },
  {
    "id": "32510c831b1a5614",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "35f09d2512ba2531",
      "039f552adc46dafe"
    ],
    "x": 614,
    "y": 879,
    "w": 252,
    "h": 122
  },
  {
    "id": "8ce04169bc76e304",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "d5a83e300eebfc61",
      "62cae7d5bfb56eeb"
    ],
    "x": 954,
    "y": 739,
    "w": 232,
    "h": 142
  },
  {
    "id": "145b7a289a0ecec8",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "1b6db418cc41c1af",
      "78e0fec35a02d6a3",
      "0d3dab80a41bef94",
      "8ac8ea79ada457b2",
      "08e9debfa5862410",
      "adeb939627531a1b"
    ],
    "x": 1234,
    "y": 279,
    "w": 592,
    "h": 182
  },
  {
    "id": "6a948d350cde0d63",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "7ca70a7c824ad6c8",
      "6005b99a01f638ab",
      "cca5434451ae61d9"
    ],
    "x": 108,
    "y": 1059,
    "w": 1924,
    "h": 1134
  },
  {
    "id": "6005b99a01f638ab",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "g": "6a948d350cde0d63",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "cbe2576e5f6a7350",
      "eca7bc21c89a6542",
      "457492eae8e9f10e",
      "9568e9ab9434039c",
      "9d6b7f3e7ad8304f",
      "f6eac0146054350c",
      "78d8a79da3d2d4f9",
      "b2b1e0a152fe2643",
      "f5c3bfc9f5f742e4",
      "3e2dae51cef6f4ed",
      "8475ee084b591d4f",
      "abc7b30f7186251e",
      "232238a5f4052046",
      "842d17cdccf73119",
      "1e78695467eab65d",
      "77489b8f51357599",
      "9ca5f0de48314d53",
      "c374b333320a975d",
      "5099dd41ddabf7bb",
      "22fa1c7241a6242e",
      "742f006403ed2de5",
      "bdad696b1703abbc",
      "9b0013540d5273c2",
      "dbe533e821a704ff",
      "be3851d2332f725b",
      "0b5e05bf32a0e3c3",
      "17028d61d39d2447",
      "6f618367815ec2a2",
      "a0b3d0cea1ae6b55",
      "dd3c0921ccb90c6d",
      "9a176a3d185df588",
      "6e8a092f7e0d8e53",
      "dad7c92a93c9ae84"
    ],
    "x": 134,
    "y": 1159,
    "w": 952,
    "h": 802
  },
  {
    "id": "cca5434451ae61d9",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "g": "6a948d350cde0d63",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "ca38642c3aa19515",
      "6124df213e44bec5",
      "1f76feef08b49b68",
      "8c521af907c584e8",
      "4886f8cda328f9d5",
      "3a4c2163ea67c5bf",
      "ca00336458be444c",
      "382b3a3acf820381",
      "27f8e3b2d113bfd8",
      "6bbe079a7da5af7a",
      "0904516891989dc5",
      "b60ea77abc331fe8",
      "13e2c84154dc6cc5",
      "720b17c36f35c462",
      "083f1edb7af8c06b",
      "4decdd61ac6d5363",
      "bb5d623c76fdd01c",
      "60a8824d97a1f5d4",
      "100be03b618ed8b6",
      "ada68241acb24f6d",
      "b5ba9d7fa569f9fd",
      "45d1c19859e26856",
      "d203ce4383ee9132",
      "85c9317a2ad13265",
      "095d5dc9e8bb6a32",
      "0f282ca693431566",
      "5dbecd11ccf8bb59",
      "65635f84f5a27757",
      "f85d7950ff76472c",
      "17b0c5e2eded2f17"
    ],
    "x": 1108,
    "y": 1159,
    "w": 898,
    "h": 1008
  },
  {
    "id": "d203ce4383ee9132",
    "type": "group",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "6929fe035dcf7949",
      "08b0b51986cb1553",
      "a292be716a4f501a",
      "1c5f2b1531c276dd",
      "aa9d3825cb5eea6d",
      "f347c4e30b6e042f",
      "097b3879e9905dd0",
      "b9200dcfd6413b8d",
      "93a84d70491859ef"
    ],
    "x": 1134,
    "y": 1879,
    "w": 742,
    "h": 262
  },
  {
    "id": "f7c953c02d701c1b",
    "type": "subflow:a11fc357385c8d20",
    "z": "d9a9ebbb2cc5d793",
    "g": "85403893f7aaf1b2",
    "name": "",
    "x": 460,
    "y": 140,
    "wires": []
  },
  {
    "id": "1b26e0e465d1fd67",
    "type": "cronplus",
    "z": "d9a9ebbb2cc5d793",
    "g": "85403893f7aaf1b2",
    "name": "Alle 1 Minuten",
    "outputField": "payload",
    "timeZone": "",
    "storeName": "",
    "commandResponseMsgOutput": "output1",
    "defaultLocation": "",
    "defaultLocationType": "default",
    "outputs": 1,
    "options": [
      {
        "name": "Alle 1 Minuten",
        "topic": "topic1",
        "payloadType": "default",
        "payload": "",
        "expressionType": "cron",
        "expression": "0 0/1 * * * ? *",
        "location": "",
        "offset": "0",
        "solarType": "all",
        "solarEvents": "sunrise,sunset"
      }
    ],
    "x": 240,
    "y": 240,
    "wires": [
      [
        "188b9b4e8981c3a2"
      ]
    ]
  },
  {
    "id": "188b9b4e8981c3a2",
    "type": "gate",
    "z": "d9a9ebbb2cc5d793",
    "g": "85403893f7aaf1b2",
    "name": "STOP",
    "controlTopic": "zendure.control.STOP",
    "defaultState": "open",
    "openCmd": "open",
    "closeCmd": "close",
    "toggleCmd": "toggle",
    "defaultCmd": "default",
    "statusCmd": "status",
    "persist": false,
    "storeName": "default",
    "x": 430,
    "y": 240,
    "wires": [
      [
        "61632dd82147fa95"
      ]
    ]
  },
  {
    "id": "cfdbab4862ea8893",
    "type": "function",
    "z": "d9a9ebbb2cc5d793",
    "g": "ba4e364f0c1f0541",
    "name": "Inital variablen setzen",
    "func": "global.set(\"zendure.config\", {\n    low_minVol: 3.20,             // Untergrenze f√ºr Entladung\n    minVol_critical: 3.00,        // Schwelle Notladen start\n    minVol_safe: 3.30,            // Schwelle zum Deaktivieren Notladung\n    maxSOC: 100,                  // Maximale Ladegrenze\n    Hysteresis_After_Empty: 25,   // SOC der nach leerem Akku erreicht werden muss\n\n    START_AC_LEISTUNG: 100,       // Initiale AC-Leistung (Startwert)\n    MAX_AC_LEISTUNG: 900,         // Maximale AC-Leistung\n    SKALIERUNG: 1,                // Skalierungsfaktor f√ºr Regelung\n    ZIEL_NEGATIVE_LEISTUNG: -100, // Zielwert f√ºr Netzbezug (z.‚ÄØB. 0‚ÄØW bei Nulleinspeisung)\n    dischargePower: 850           // Entladeleistung\n});\n\nglobal.set(\"zendure.control\", {\n    BATTERY_EMPTY_flag: false,    // Initial Battery Empty Flag\n    basemode: false,              // Initial Basismodus Basismodus\n    BATTERYFULLONDAY: false,      // Initial Batterie voll am Tag\n    discharge: false,             // Initial entladen erlaubt?\n    notladen_flag: false          // Initial Notladen Flag  \n});\n\nmsg.payload = \"Zendure-Konfiguration initialisiert\";\nreturn msg;\n",
    "outputs": 0,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 900,
    "y": 140,
    "wires": []
  },
  {
    "id": "208905654b3abb92",
    "type": "subflow:229f8f76918d802b",
    "z": "d9a9ebbb2cc5d793",
    "g": "d7c9f74f14ee5925",
    "name": "Zendure Notmodus",
    "x": 230,
    "y": 840,
    "wires": [
      [
        "ebbc9e3ed43cad5e"
      ],
      [
        "457cf316a9564b5c"
      ],
      [
        "e6bebda843d10ddd"
      ],
      [
        "2d90f7135788fd76"
      ]
    ]
  },
  {
    "id": "ebbc9e3ed43cad5e",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "d7c9f74f14ee5925",
    "name": "Notmodus Gate zu",
    "mode": "link",
    "links": [
      "4517da5bdf41e5a1"
    ],
    "x": 375,
    "y": 780,
    "wires": []
  },
  {
    "id": "457cf316a9564b5c",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "d7c9f74f14ee5925",
    "name": "Notmodus Gate auf",
    "mode": "link",
    "links": [
      "4517da5bdf41e5a1"
    ],
    "x": 375,
    "y": 820,
    "wires": []
  },
  {
    "id": "e6bebda843d10ddd",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "d7c9f74f14ee5925",
    "name": "Notmodusn Ladeleistung",
    "mode": "link",
    "links": [
      "eb504a31e8cd1553"
    ],
    "x": 375,
    "y": 860,
    "wires": []
  },
  {
    "id": "2d90f7135788fd76",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "d7c9f74f14ee5925",
    "name": "Notmodus AC-Mode",
    "mode": "link",
    "links": [
      "4c641c1d8f1355c1",
      "6bbe079a7da5af7a"
    ],
    "x": 375,
    "y": 900,
    "wires": []
  },
  {
    "id": "4517da5bdf41e5a1",
    "type": "link in",
    "z": "d9a9ebbb2cc5d793",
    "g": "85403893f7aaf1b2",
    "name": "Eingang Gate",
    "links": [
      "457cf316a9564b5c",
      "ebbc9e3ed43cad5e",
      "45fc8501552a5226"
    ],
    "x": 355,
    "y": 200,
    "wires": [
      [
        "188b9b4e8981c3a2"
      ]
    ]
  },
  {
    "id": "b57f83d8548840fe",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "d7c9f74f14ee5925",
    "name": "Notlademodus",
    "info": "",
    "x": 210,
    "y": 780,
    "wires": []
  },
  {
    "id": "40b0b8e9ff855d60",
    "type": "cronplus",
    "z": "d9a9ebbb2cc5d793",
    "g": "85403893f7aaf1b2",
    "name": "Alle 5 Sekunden",
    "outputField": "payload",
    "timeZone": "",
    "storeName": "",
    "commandResponseMsgOutput": "output1",
    "defaultLocation": "",
    "defaultLocationType": "default",
    "outputs": 1,
    "options": [
      {
        "name": "Alle 5 Sekunden",
        "topic": "topic1",
        "payloadType": "default",
        "payload": "",
        "expressionType": "cron",
        "expression": "*/5 * * * * *",
        "location": "",
        "offset": "0",
        "solarType": "all",
        "solarEvents": "sunrise,sunset"
      }
    ],
    "x": 240,
    "y": 140,
    "wires": [
      [
        "f7c953c02d701c1b"
      ]
    ]
  },
  {
    "id": "1396e7f0a66298f5",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "√úbergabe an HUB1200",
    "info": "",
    "x": 740,
    "y": 240,
    "wires": []
  },
  {
    "id": "5f04efc617fee11d",
    "type": "ioBroker out",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "HUB 1200 Ausgangsleistung",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.control.setOutputLimit",
    "ack": "false",
    "autoCreate": "false",
    "stateName": "",
    "role": "",
    "payloadType": "",
    "readonly": "",
    "stateUnit": "",
    "stateMin": "",
    "stateMax": "",
    "x": 960,
    "y": 340,
    "wires": []
  },
  {
    "id": "ac22c3a15f0e2f7e",
    "type": "ioBroker out",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "ACE1500 Ladeleistung",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.control.setInputLimit",
    "ack": "false",
    "autoCreate": "false",
    "stateName": "",
    "role": "",
    "payloadType": "",
    "readonly": "",
    "stateUnit": "",
    "stateMin": "",
    "stateMax": "",
    "x": 940,
    "y": 400,
    "wires": []
  },
  {
    "id": "ffda41c56ad9e102",
    "type": "ioBroker out",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "AC Modus wechseln",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.control.acMode",
    "ack": "false",
    "autoCreate": "false",
    "stateName": "",
    "role": "",
    "payloadType": "",
    "readonly": "",
    "stateUnit": "",
    "stateMin": "",
    "stateMax": "",
    "x": 940,
    "y": 460,
    "wires": []
  },
  {
    "id": "ce19a9d77a464f41",
    "type": "link in",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "Eingang Ausgangsleistung",
    "links": [
      "6ccbe695c1eea1f0",
      "e40c113946739512",
      "cf1c3d1e34117ee5"
    ],
    "x": 665,
    "y": 340,
    "wires": [
      [
        "7aaa1e36f00a62ea"
      ]
    ]
  },
  {
    "id": "eb504a31e8cd1553",
    "type": "link in",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "Eingang Ladeleistung",
    "links": [
      "e6bebda843d10ddd",
      "7b4e6e82c33eff58",
      "42633d37c766a79f",
      "20cd9246c9041820",
      "b93e1ccac669c05d"
    ],
    "x": 665,
    "y": 400,
    "wires": [
      [
        "0850ef020662156c"
      ]
    ]
  },
  {
    "id": "4c641c1d8f1355c1",
    "type": "link in",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "Eingang AC Mode",
    "links": [
      "2d90f7135788fd76",
      "c15edfb616545c97",
      "17f1d8ef6bf07edd",
      "8f42371f01e96132",
      "27f8e3b2d113bfd8"
    ],
    "x": 665,
    "y": 460,
    "wires": [
      [
        "4b953a919045accc"
      ]
    ]
  },
  {
    "id": "2415c1234eb286ad",
    "type": "subflow:0dd9ca4658880b98",
    "z": "d9a9ebbb2cc5d793",
    "g": "bbca50b38d2e4366",
    "name": "Battery Full during Day",
    "x": 1080,
    "y": 680,
    "wires": []
  },
  {
    "id": "9d100687894abafe",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "bbca50b38d2e4366",
    "name": "Flag Akku voll am Tag",
    "info": "",
    "x": 1080,
    "y": 620,
    "wires": []
  },
  {
    "id": "61632dd82147fa95",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "85403893f7aaf1b2",
    "name": "Trigger Ausgang ",
    "mode": "link",
    "links": [
      "557e8189af5e7007",
      "886b857c6d685275",
      "22ea6f1c3f65a00f"
    ],
    "x": 525,
    "y": 240,
    "wires": []
  },
  {
    "id": "557e8189af5e7007",
    "type": "link in",
    "z": "d9a9ebbb2cc5d793",
    "g": "88d163abbff08ff7",
    "name": "Laden Eingang",
    "links": [
      "61632dd82147fa95"
    ],
    "x": 155,
    "y": 420,
    "wires": [
      [
        "e6d5936f07a10fa8"
      ]
    ]
  },
  {
    "id": "7b4e6e82c33eff58",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "88d163abbff08ff7",
    "name": "Ladelogik 0W bei 100%",
    "mode": "link",
    "links": [
      "eb504a31e8cd1553"
    ],
    "x": 415,
    "y": 380,
    "wires": []
  },
  {
    "id": "42633d37c766a79f",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "88d163abbff08ff7",
    "name": "Ladeleistung dynamisch",
    "mode": "link",
    "links": [
      "eb504a31e8cd1553"
    ],
    "x": 415,
    "y": 420,
    "wires": []
  },
  {
    "id": "c15edfb616545c97",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "88d163abbff08ff7",
    "name": "Ladelogik AC Mode 1",
    "mode": "link",
    "links": [
      "4c641c1d8f1355c1",
      "6bbe079a7da5af7a"
    ],
    "x": 415,
    "y": 460,
    "wires": []
  },
  {
    "id": "f432d14e4dc5dd22",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "ba4e364f0c1f0541",
    "name": "Konfigwerte initialisieren bei Systemneustart",
    "info": "",
    "x": 810,
    "y": 80,
    "wires": []
  },
  {
    "id": "e9f5b4425b5db465",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "85403893f7aaf1b2",
    "name": "Werte holen in global und Trigger",
    "info": "",
    "x": 290,
    "y": 80,
    "wires": []
  },
  {
    "id": "e6d5936f07a10fa8",
    "type": "subflow:3e0ce0fb67a10cbe",
    "z": "d9a9ebbb2cc5d793",
    "g": "88d163abbff08ff7",
    "name": "Ladelogik",
    "x": 270,
    "y": 420,
    "wires": [
      [
        "7b4e6e82c33eff58"
      ],
      [
        "42633d37c766a79f"
      ],
      [
        "c15edfb616545c97"
      ]
    ]
  },
  {
    "id": "c1fb8d6cf27ea2dd",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "88d163abbff08ff7",
    "name": "Ladelogik",
    "info": "",
    "x": 270,
    "y": 340,
    "wires": []
  },
  {
    "id": "886b857c6d685275",
    "type": "link in",
    "z": "d9a9ebbb2cc5d793",
    "g": "b075c69001683870",
    "name": "Eingang Entladelogik",
    "links": [
      "61632dd82147fa95"
    ],
    "x": 155,
    "y": 640,
    "wires": [
      [
        "046fc5d8ef7b11fd"
      ]
    ]
  },
  {
    "id": "6ccbe695c1eea1f0",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "b075c69001683870",
    "name": "Entladelogik 0 Watt",
    "mode": "link",
    "links": [
      "ce19a9d77a464f41"
    ],
    "x": 395,
    "y": 600,
    "wires": []
  },
  {
    "id": "e40c113946739512",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "b075c69001683870",
    "name": "Entladelogik 850W",
    "mode": "link",
    "links": [
      "ce19a9d77a464f41"
    ],
    "x": 395,
    "y": 640,
    "wires": []
  },
  {
    "id": "17f1d8ef6bf07edd",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "b075c69001683870",
    "name": "Entladelogik AC-Mode 2",
    "mode": "link",
    "links": [
      "4c641c1d8f1355c1",
      "6bbe079a7da5af7a"
    ],
    "x": 395,
    "y": 680,
    "wires": []
  },
  {
    "id": "046fc5d8ef7b11fd",
    "type": "subflow:018119470926c284",
    "z": "d9a9ebbb2cc5d793",
    "g": "b075c69001683870",
    "name": "Entladelogik",
    "x": 270,
    "y": 640,
    "wires": [
      [
        "6ccbe695c1eea1f0"
      ],
      [
        "e40c113946739512"
      ],
      [
        "17f1d8ef6bf07edd"
      ]
    ]
  },
  {
    "id": "679e69a9cb0c03d3",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "b075c69001683870",
    "name": "Entladelogik",
    "info": "",
    "x": 270,
    "y": 560,
    "wires": []
  },
  {
    "id": "2ce21b803deebbdb",
    "type": "subflow:36a24bbfc53f303a",
    "z": "d9a9ebbb2cc5d793",
    "g": "bbc8e4e93fa431e9",
    "name": "Akku leer Flag",
    "x": 780,
    "y": 820,
    "wires": []
  },
  {
    "id": "ab581234fdec20ef",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "bbc8e4e93fa431e9",
    "name": "Akku leer Flag!",
    "info": "",
    "x": 740,
    "y": 760,
    "wires": []
  },
  {
    "id": "22ea6f1c3f65a00f",
    "type": "link in",
    "z": "d9a9ebbb2cc5d793",
    "g": "bbc8e4e93fa431e9",
    "name": "Akku leer Flag Eingang",
    "links": [
      "61632dd82147fa95"
    ],
    "x": 655,
    "y": 820,
    "wires": [
      [
        "2ce21b803deebbdb"
      ]
    ]
  },
  {
    "id": "7aaa1e36f00a62ea",
    "type": "rbe",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "",
    "func": "rbe",
    "gap": "",
    "start": "",
    "inout": "out",
    "septopics": true,
    "property": "payload",
    "topi": "topic",
    "x": 750,
    "y": 340,
    "wires": [
      [
        "5f04efc617fee11d"
      ]
    ]
  },
  {
    "id": "0850ef020662156c",
    "type": "rbe",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "",
    "func": "rbe",
    "gap": "",
    "start": "",
    "inout": "out",
    "septopics": true,
    "property": "payload",
    "topi": "topic",
    "x": 750,
    "y": 400,
    "wires": [
      [
        "ac22c3a15f0e2f7e"
      ]
    ]
  },
  {
    "id": "4b953a919045accc",
    "type": "rbe",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "",
    "func": "rbe",
    "gap": "",
    "start": "",
    "inout": "out",
    "septopics": true,
    "property": "payload",
    "topi": "topic",
    "x": 750,
    "y": 460,
    "wires": [
      [
        "ffda41c56ad9e102"
      ]
    ]
  },
  {
    "id": "73d2f3f7ba050580",
    "type": "subflow:1a6cc5590fe09fd1",
    "z": "d9a9ebbb2cc5d793",
    "g": "444896c9d0a34a39",
    "name": "Is Night?",
    "x": 700,
    "y": 660,
    "wires": []
  },
  {
    "id": "f4d717d86ddb6b77",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "444896c9d0a34a39",
    "name": "Is Night Flag! ",
    "info": "",
    "x": 710,
    "y": 620,
    "wires": []
  },
  {
    "id": "2062a2e82b5079d7",
    "type": "function",
    "z": "d9a9ebbb2cc5d793",
    "g": "3fe1ac87b9fb2c8f",
    "name": "SOC Berrechnung",
    "func": "// ----- üß± Konfiguration -----\nlet intervalSeconds = 10;                    // Takt in Sekunden\nlet nominalCapacity = flow.get(\"realCapacity\");\nif (nominalCapacity === undefined) {\n    nominalCapacity = 6720;                 // Initiale Kapazit√§t in Wh\n    flow.set(\"realCapacity\", nominalCapacity);\n}\n\n// ----- üîå Eingabewerte aus Payload -----\nlet inputPower = msg.payload.inputPower || 0;\nlet outputPower = msg.payload.outputPower || 0;\nlet maxVol = msg.payload.highestMaxVol || 0;\nlet minVol = msg.payload.lowestMinVol || 0;\n\n// ----- üßÆ Energieintegration -----\nlet deltaWh = (inputPower - outputPower) * (intervalSeconds / 3600); // Wh im Intervall\n\n// ----- üß† Akkumulierte Wh laden oder SOC aus Zellspannung sch√§tzen -----\nlet accuWh = flow.get(\"accumulatedWh\");\nif (accuWh === undefined) {\n    // üîç Zellspannungs-basierte SOC-Sch√§tzung (LiFePO‚ÇÑ flache Kurve)\n    let socEstimate = 0;\n    if (maxVol >= 3.55) socEstimate = 100;\n    else if (maxVol >= 3.45) socEstimate = 90;\n    else if (maxVol >= 3.40) socEstimate = 80;\n    else if (maxVol >= 3.35) socEstimate = 70;\n    else if (maxVol >= 3.30) socEstimate = 60;\n    else if (maxVol >= 3.25) socEstimate = 50;\n    else if (maxVol >= 3.20) socEstimate = 40;\n    else if (maxVol >= 3.15) socEstimate = 30;\n    else if (maxVol >= 3.10) socEstimate = 20;\n    else socEstimate = 10;\n\n    accuWh = (nominalCapacity * socEstimate) / 100;\n    node.warn(`SOC-Modul initialisiert via Zellspannung ‚Üí Sch√§tzung: ${socEstimate}% (${accuWh.toFixed(0)} Wh)`);\n}\n\n// ----- üß± Akkumulation & Begrenzung -----\naccuWh += deltaWh;\naccuWh = Math.max(0, accuWh); // Unter null? Vergiss es.\n\n// ----- üéØ Volllade-Reset UND dynamische Kapazit√§tsanpassung -----\nif (maxVol >= 3.57 && inputPower < 10) {\n    // üßÆ Wenn mehr reingepumpt als urspr√ºngliche Kapa ‚Üí anpassen\n    if (accuWh > nominalCapacity + 10) { // Toleranzgrenze 10 Wh\n        flow.set(\"realCapacity\", accuWh);\n        nominalCapacity = accuWh; // Sofort mit neuer Kapa weiterrechnen\n        node.warn(`üí° Neue Kapazit√§t erkannt: realCapacity = ${accuWh.toFixed(1)} Wh`);\n    }\n\n    // üîÑ Reset SOC auf volle Kapa\n    accuWh = nominalCapacity;\n    node.warn(\"üîÑ SOC Reset: Vollladung erkannt ‚Üí Akku auf Kapazit√§tswert gesetzt.\");\n}\n\n// ----- üìê SOC-Berechnung -----\naccuWh = Math.min(accuWh, nominalCapacity); // nie √ºber 100 %\nlet soc = (accuWh / nominalCapacity) * 100;\nsoc = Math.max(0, Math.min(soc, 100));      // Clamp 0‚Äì100\n\n// ----- üíæ Speicherung in Context -----\nflow.set(\"accumulatedWh\", accuWh);\nflow.set(\"virtualSOC\", soc);\n\n// ----- üì¶ Output f√ºr Weiterverarbeitung -----\nmsg.payload = {\n    virtualSOC: soc.toFixed(2),\n    accumulatedWh: accuWh.toFixed(2),\n    capacityWh: nominalCapacity.toFixed(1),\n    inputPower: inputPower,\n    outputPower: outputPower,\n    maxVol: maxVol,\n    minVol: minVol\n};\nmsg.topic = \"SOC_Berechnung\";\n\n// ----- üü¢ Statusanzeige f√ºr Dashboard & Debug -----\nnode.status({\n    fill: \"green\",\n    shape: \"dot\",\n    text: `ü¶é SOC: ${soc.toFixed(1)}‚ÄØ% | Wh: ${accuWh.toFixed(0)}`\n});\n\nreturn msg;\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1570,
    "y": 140,
    "wires": [
      [
        "5fa75cf2d89721da"
      ]
    ]
  },
  {
    "id": "96c2cc0fe92af8b9",
    "type": "subflow:27076a40bd20d054",
    "z": "d9a9ebbb2cc5d793",
    "g": "3fe1ac87b9fb2c8f",
    "name": "SOC Berrechnung",
    "x": 1350,
    "y": 140,
    "wires": [
      [
        "2062a2e82b5079d7"
      ]
    ]
  },
  {
    "id": "531a017d6bffcdb6",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "3fe1ac87b9fb2c8f",
    "name": "SOC Berrechnug nach In/Out",
    "info": "",
    "x": 1380,
    "y": 100,
    "wires": []
  },
  {
    "id": "d17a00ce5382cac1",
    "type": "ioBroker out",
    "z": "d9a9ebbb2cc5d793",
    "g": "3fe1ac87b9fb2c8f",
    "name": "SOC_calc",
    "topic": "0_userdata.0.PV-Daten.SOC_calc",
    "ack": "true",
    "autoCreate": "false",
    "stateName": "",
    "role": "",
    "payloadType": "",
    "readonly": "",
    "stateUnit": "",
    "stateMin": "",
    "stateMax": "",
    "x": 1540,
    "y": 200,
    "wires": []
  },
  {
    "id": "5fa75cf2d89721da",
    "type": "function",
    "z": "d9a9ebbb2cc5d793",
    "g": "3fe1ac87b9fb2c8f",
    "name": "Wert extrahieren",
    "func": "// Hole nur den virtualSOC aus msg.payload\nmsg.payload = parseFloat(msg.payload.virtualSOC);\nmsg.topic = \"0_userdata.0.PV-Daten.SOC_calc\"; // Datenpunkt in ioBroker\nreturn msg;\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1360,
    "y": 200,
    "wires": [
      [
        "d17a00ce5382cac1"
      ]
    ]
  },
  {
    "id": "6929fe035dcf7949",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "d203ce4383ee9132",
    "name": "Sommer/Winterbetrieb low_minVol",
    "info": "",
    "x": 1480,
    "y": 1920,
    "wires": []
  },
  {
    "id": "08b0b51986cb1553",
    "type": "function",
    "z": "d9a9ebbb2cc5d793",
    "g": "d203ce4383ee9132",
    "name": "Check Sommer oder Winter ",
    "func": "// === low_minVol Schalterlogik (Sommer/Winter) ===============================\n// Ziel: Setzt manuell die Zellspannungsschwelle f√ºr Entladesperre (low_minVol)\n// Steuerung erfolgt √ºber den Schalter \"Zendure schlecht Wetter\"\n// ‚Üí TRUE = Wintermodus = Zellschutz aktiv (z.‚ÄØB. 3.15 V)\n// ‚Üí FALSE = Sommermodus = Standardbetrieb (z.‚ÄØB. 3.05 V)\n// ============================================================================\nconst isWinterMode = msg.payload === true;  // Google Home Schalterwert\n\n// Schwellenwert festlegen\nconst minVolThreshold = isWinterMode ? 3.2 : 3.1;\n\n// Flow-Variable setzen ‚Üí wird vom Gate-Node benutzt\nglobal.set(\"zendure.config.low_minVol\", minVolThreshold);\n\n// Nur den Zahlenwert zur√ºckgeben\nmsg.payload = minVolThreshold;\nreturn msg;\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1700,
    "y": 1960,
    "wires": [
      [
        "a292be716a4f501a"
      ]
    ]
  },
  {
    "id": "a292be716a4f501a",
    "type": "subflow:2ee5f1be3938f82f",
    "z": "d9a9ebbb2cc5d793",
    "g": "d203ce4383ee9132",
    "name": "low_minVol",
    "x": 1650,
    "y": 2000,
    "wires": []
  },
  {
    "id": "1c5f2b1531c276dd",
    "type": "subflow:157b2b83889624c6",
    "z": "d9a9ebbb2cc5d793",
    "g": "d203ce4383ee9132",
    "name": "min SOC schlecht Wetter ",
    "x": 1690,
    "y": 2040,
    "wires": [
      [
        "f347c4e30b6e042f"
      ],
      [
        "aa9d3825cb5eea6d"
      ]
    ]
  },
  {
    "id": "337df6208901fc0a",
    "type": "ioBroker out",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "minSOC",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.control.dischargeLimit",
    "ack": "false",
    "autoCreate": "false",
    "stateName": "",
    "role": "",
    "payloadType": "",
    "readonly": "",
    "stateUnit": "",
    "stateMin": "",
    "stateMax": "",
    "x": 900,
    "y": 520,
    "wires": []
  },
  {
    "id": "1b0c1e3615ebcb5b",
    "type": "rbe",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "",
    "func": "rbe",
    "gap": "",
    "start": "",
    "inout": "out",
    "septopics": true,
    "property": "payload",
    "topi": "topic",
    "x": 750,
    "y": 520,
    "wires": [
      [
        "337df6208901fc0a"
      ]
    ]
  },
  {
    "id": "f518e09a1aa2d749",
    "type": "link in",
    "z": "d9a9ebbb2cc5d793",
    "g": "b265d3155c6e797b",
    "name": "Eingang minSOC",
    "links": [
      "f347c4e30b6e042f",
      "aa9d3825cb5eea6d",
      "ca00336458be444c"
    ],
    "x": 665,
    "y": 520,
    "wires": [
      [
        "1b0c1e3615ebcb5b"
      ]
    ]
  },
  {
    "id": "aa9d3825cb5eea6d",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "d203ce4383ee9132",
    "name": "link out 25",
    "mode": "link",
    "links": [
      "3a4c2163ea67c5bf",
      "f518e09a1aa2d749"
    ],
    "x": 1835,
    "y": 2060,
    "wires": []
  },
  {
    "id": "f347c4e30b6e042f",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "d203ce4383ee9132",
    "name": "link out 26",
    "mode": "link",
    "links": [
      "3a4c2163ea67c5bf",
      "f518e09a1aa2d749"
    ],
    "x": 1835,
    "y": 2020,
    "wires": []
  },
  {
    "id": "35f09d2512ba2531",
    "type": "subflow:0866aef9a251ad7e",
    "z": "d9a9ebbb2cc5d793",
    "g": "32510c831b1a5614",
    "name": "Entladen erlaubt? Flag",
    "x": 740,
    "y": 960,
    "wires": []
  },
  {
    "id": "039f552adc46dafe",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "32510c831b1a5614",
    "name": "Entladen erlaubt? Flag",
    "info": "",
    "x": 740,
    "y": 920,
    "wires": []
  },
  {
    "id": "d5a83e300eebfc61",
    "type": "subflow:937d276173bef4fb",
    "z": "d9a9ebbb2cc5d793",
    "g": "8ce04169bc76e304",
    "name": "Zendure Basemode",
    "x": 1070,
    "y": 840,
    "wires": []
  },
  {
    "id": "62cae7d5bfb56eeb",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "8ce04169bc76e304",
    "name": "Zendure Basemode",
    "info": "",
    "x": 1070,
    "y": 780,
    "wires": []
  },
  {
    "id": "1b6db418cc41c1af",
    "type": "ioBroker get",
    "z": "d9a9ebbb2cc5d793",
    "g": "145b7a289a0ecec8",
    "name": "smart Mode",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.smartMode",
    "attrname": "payload",
    "payloadType": "value",
    "errOnInvalidState": "nothing",
    "x": 1350,
    "y": 420,
    "wires": [
      [
        "78e0fec35a02d6a3"
      ]
    ]
  },
  {
    "id": "78e0fec35a02d6a3",
    "type": "switch",
    "z": "d9a9ebbb2cc5d793",
    "g": "145b7a289a0ecec8",
    "name": "if false",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "x": 1510,
    "y": 420,
    "wires": [
      [
        "0d3dab80a41bef94"
      ]
    ]
  },
  {
    "id": "0d3dab80a41bef94",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "145b7a289a0ecec8",
    "name": "True",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "true",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1550,
    "y": 340,
    "wires": [
      [
        "8ac8ea79ada457b2"
      ]
    ]
  },
  {
    "id": "8ac8ea79ada457b2",
    "type": "ioBroker out",
    "z": "d9a9ebbb2cc5d793",
    "g": "145b7a289a0ecec8",
    "name": "smart Mode setzen",
    "topic": "zendure-solarflow.0.73bkTV.DeviceID.control.smartMode",
    "ack": "false",
    "autoCreate": "false",
    "stateName": "",
    "role": "",
    "payloadType": "",
    "readonly": "",
    "stateUnit": "",
    "stateMin": "",
    "stateMax": "",
    "x": 1710,
    "y": 420,
    "wires": []
  },
  {
    "id": "08e9debfa5862410",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "145b7a289a0ecec8",
    "name": "Smart Mode Check",
    "info": "",
    "x": 1370,
    "y": 320,
    "wires": []
  },
  {
    "id": "adeb939627531a1b",
    "type": "cronplus",
    "z": "d9a9ebbb2cc5d793",
    "g": "145b7a289a0ecec8",
    "name": "Jede Stunde",
    "outputField": "payload",
    "timeZone": "",
    "storeName": "",
    "commandResponseMsgOutput": "output1",
    "defaultLocation": "",
    "defaultLocationType": "default",
    "outputs": 1,
    "options": [
      {
        "name": "Jede Stunde",
        "topic": "topic1",
        "payloadType": "default",
        "payload": "",
        "expressionType": "cron",
        "expression": "0 0 * * * ? *",
        "location": "",
        "offset": "0",
        "solarType": "all",
        "solarEvents": "sunrise,sunset"
      }
    ],
    "x": 1350,
    "y": 360,
    "wires": [
      [
        "1b6db418cc41c1af"
      ]
    ]
  },
  {
    "id": "cbe2576e5f6a7350",
    "type": "function",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "Collect Global Flags",
    "func": "msg.payload = {\n    discharge: global.get(\"zendure.control.discharge\"),\n    batteryEmpty: global.get(\"zendure.control.BATTERY_EMPTY_flag\"),\n    batteryFullDay: global.get(\"zendure.control.BATTERYFULLONDAY\"),\n    notladen: global.get(\"zendure.control.notladen_flag\"),\n    SOC: global.get(\"zendure.SOC\"),\n    Netzbezug: global.get(\"zendure.Netzbezug\"),\n    PV_Power: global.get(\"zendure.PV_Power\"),\n    minVol: global.get(\"zendure.minVol\"),\n    minSOC: global.get(\"zendure.minSOC\"),\n    low_minVol: global.get(\"zendure.config.low_minVol\"),\n    isNight: global.get(\"isNight\"),\n    Sonnenaufgang_Offset: global.get(\"zendure.sunrisecalc\"),\n    Sonnenuntergang_Offset: global.get(\"zendure.sunsetcalc\"),\n    ByPass_state: global.get(\"zendure.ByPass_state\"),\n    minVol1: global.get(\"zendure.minVol#1\"),\n    minVol2: global.get(\"zendure.minVol#2\"),\n    minVol3: global.get(\"zendure.minVol#3\"),\n    minVol4: global.get(\"zendure.minVol#4\"),\n    badWeather: global.get(\"zendure.control.badweatherflag\")\n};\nreturn msg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 480,
    "y": 1240,
    "wires": [
      [
        "f6eac0146054350c",
        "78d8a79da3d2d4f9",
        "b2b1e0a152fe2643",
        "f5c3bfc9f5f742e4",
        "3e2dae51cef6f4ed",
        "8475ee084b591d4f",
        "abc7b30f7186251e",
        "232238a5f4052046",
        "842d17cdccf73119",
        "1e78695467eab65d",
        "77489b8f51357599",
        "9ca5f0de48314d53",
        "c374b333320a975d",
        "5099dd41ddabf7bb",
        "22fa1c7241a6242e",
        "742f006403ed2de5",
        "bdad696b1703abbc",
        "a0b3d0cea1ae6b55"
      ]
    ]
  },
  {
    "id": "eca7bc21c89a6542",
    "type": "function",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "Collect Global PV-Produktion",
    "func": "// PV-Wert aus dem globalen Kontext holen\nlet value = global.get(\"zendure.PV_Power\");\n\n// Falls der Wert kein echter Zahlentyp ist, umwandeln\nvalue = Number(value);\n\n// Nachricht f√ºr den Chart aufbereiten\nmsg.payload = value;            // reine Zahl als Payload\nmsg.timestamp = Date.now();     // Zeitstempel f√ºr den Chart\nmsg.topic = \"PV_Power\";         // Serienname im Chart (optional)\n\n// Nachricht zur√ºckgeben\nreturn msg;\n",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 440,
    "y": 1720,
    "wires": [
      [
        "9b0013540d5273c2"
      ]
    ]
  },
  {
    "id": "ca38642c3aa19515",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Empty Flag false",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.BATTERY_EMPTY_flag",
        "pt": "global",
        "to": "false",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1830,
    "y": 1840,
    "wires": [
      []
    ]
  },
  {
    "id": "6124df213e44bec5",
    "type": "switch",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Akku leer ?",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 1630,
    "y": 1820,
    "wires": [
      [
        "1f76feef08b49b68"
      ],
      [
        "ca38642c3aa19515"
      ]
    ]
  },
  {
    "id": "1f76feef08b49b68",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Empty Flag true",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.BATTERY_EMPTY_flag",
        "pt": "global",
        "to": "true",
        "tot": "bool"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1820,
    "y": 1800,
    "wires": [
      []
    ]
  },
  {
    "id": "7ca70a7c824ad6c8",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "6a948d350cde0d63",
    "name": "Dashboard",
    "info": "",
    "x": 240,
    "y": 1100,
    "wires": []
  },
  {
    "id": "457492eae8e9f10e",
    "type": "cronplus",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "Alle 5 Sekunden",
    "outputField": "payload",
    "timeZone": "",
    "storeName": "",
    "commandResponseMsgOutput": "output1",
    "defaultLocation": "",
    "defaultLocationType": "default",
    "outputs": 1,
    "options": [
      {
        "name": "Alle 5 Sekunden",
        "topic": "topic1",
        "payloadType": "date",
        "payload": "",
        "expressionType": "cron",
        "expression": "*/5 * * * * *",
        "location": "",
        "offset": "0",
        "solarType": "all",
        "solarEvents": "sunrise,sunset"
      }
    ],
    "x": 260,
    "y": 1240,
    "wires": [
      [
        "cbe2576e5f6a7350",
        "eca7bc21c89a6542",
        "9568e9ab9434039c",
        "be3851d2332f725b",
        "17028d61d39d2447",
        "dd3c0921ccb90c6d",
        "6e8a092f7e0d8e53"
      ]
    ]
  },
  {
    "id": "8c521af907c584e8",
    "type": "subflow:9c6378522119080a",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Sonnenzeiten mit Offset",
    "x": 1460,
    "y": 1460,
    "wires": []
  },
  {
    "id": "9568e9ab9434039c",
    "type": "function",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "Collect Global AC-Power",
    "func": "// AC-Wert aus dem globalen Kontext holen\nlet value = global.get(\"zendure.gridInput_ACE\");\n\n// Falls der Wert kein echter Zahlentyp ist, umwandeln\nvalue = Number(value);\n\n// Nachricht f√ºr den Chart aufbereiten\nmsg.payload = value;            // reine Zahl als Payload\nmsg.timestamp = Date.now();     // Zeitstempel f√ºr den Chart\nmsg.topic = \"AC_Power\";         // Serienname im Chart (optional)\n\n// Nachricht zur√ºckgeben\nreturn msg;\n",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 430,
    "y": 1760,
    "wires": [
      [
        "dbe533e821a704ff"
      ]
    ]
  },
  {
    "id": "4886f8cda328f9d5",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Entladeleistung",
    "rules": [
      {
        "t": "set",
        "p": "zendure.config.dischargePower",
        "pt": "global",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1860,
    "y": 1340,
    "wires": [
      []
    ]
  },
  {
    "id": "3a4c2163ea67c5bf",
    "type": "link in",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "minSOC Dashboard in",
    "links": [
      "f347c4e30b6e042f",
      "aa9d3825cb5eea6d"
    ],
    "x": 1165,
    "y": 1520,
    "wires": [
      [
        "083f1edb7af8c06b"
      ]
    ]
  },
  {
    "id": "ca00336458be444c",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Link out minSOC from Dashboard",
    "mode": "link",
    "links": [
      "f518e09a1aa2d749"
    ],
    "x": 1375,
    "y": 1520,
    "wires": []
  },
  {
    "id": "9d6b7f3e7ad8304f",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "Visualisierung",
    "info": "",
    "x": 250,
    "y": 1200,
    "wires": []
  },
  {
    "id": "382b3a3acf820381",
    "type": "comment",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Steuerung",
    "info": "",
    "x": 1280,
    "y": 1200,
    "wires": []
  },
  {
    "id": "27f8e3b2d113bfd8",
    "type": "link out",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Link Out AC-Mode Dashboard",
    "mode": "link",
    "links": [
      "4c641c1d8f1355c1"
    ],
    "x": 1375,
    "y": 1580,
    "wires": []
  },
  {
    "id": "6bbe079a7da5af7a",
    "type": "link in",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Link in AC-Mode Dashboard",
    "links": [
      "17f1d8ef6bf07edd",
      "2d90f7135788fd76",
      "c15edfb616545c97"
    ],
    "x": 1165,
    "y": 1580,
    "wires": [
      [
        "720b17c36f35c462"
      ]
    ]
  },
  {
    "id": "0904516891989dc5",
    "type": "cronplus",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Alle 5 Sekunden",
    "outputField": "payload",
    "timeZone": "",
    "storeName": "",
    "commandResponseMsgOutput": "output1",
    "defaultLocation": "",
    "defaultLocationType": "default",
    "outputs": 1,
    "options": [
      {
        "name": "Alle 5 Sekunden",
        "topic": "topic1",
        "payloadType": "default",
        "payload": "",
        "expressionType": "cron",
        "expression": "*/5 * * * * *",
        "location": "",
        "offset": "0",
        "solarType": "all",
        "solarEvents": "sunrise,sunset"
      }
    ],
    "x": 1260,
    "y": 1340,
    "wires": [
      [
        "b60ea77abc331fe8",
        "100be03b618ed8b6",
        "45d1c19859e26856",
        "93a84d70491859ef",
        "095d5dc9e8bb6a32",
        "65635f84f5a27757",
        "17b0c5e2eded2f17"
      ]
    ]
  },
  {
    "id": "b60ea77abc331fe8",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Aktuelle Entladeleistung",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "zendure.config.dischargePower",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1470,
    "y": 1340,
    "wires": [
      [
        "4decdd61ac6d5363"
      ]
    ]
  },
  {
    "id": "13e2c84154dc6cc5",
    "type": "ui-switch",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Akku leer Flag",
    "label": "Akku leer Flag",
    "group": "742c66c7811281cc",
    "order": 1,
    "width": 0,
    "height": 0,
    "passthru": false,
    "decouple": true,
    "topic": "topic",
    "topicType": "msg",
    "style": "",
    "className": "",
    "layout": "row-spread",
    "clickableArea": "switch",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "x": 1460,
    "y": 1820,
    "wires": [
      [
        "6124df213e44bec5"
      ]
    ]
  },
  {
    "id": "720b17c36f35c462",
    "type": "ui-dropdown",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "group": "742c66c7811281cc",
    "name": "AC-Mode",
    "label": "Option ausw√§hlen:",
    "tooltip": "",
    "order": 5,
    "width": 0,
    "height": 0,
    "passthru": true,
    "multiple": false,
    "chips": false,
    "clearable": false,
    "options": [
      {
        "label": "AC-In",
        "value": 1,
        "type": "num"
      },
      {
        "label": "AC-Out",
        "value": 2,
        "type": "num"
      }
    ],
    "payload": "",
    "topic": "topic",
    "topicType": "msg",
    "className": "",
    "typeIsComboBox": true,
    "msgTrigger": "onChange",
    "x": 1270,
    "y": 1580,
    "wires": [
      [
        "27f8e3b2d113bfd8"
      ]
    ]
  },
  {
    "id": "083f1edb7af8c06b",
    "type": "ui-slider",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "group": "5bb06bcb4ba06d8f",
    "name": "minSOC",
    "label": "minSOC",
    "tooltip": "",
    "order": 6,
    "width": 0,
    "height": 0,
    "passthru": false,
    "outs": "end",
    "topic": "topic",
    "topicType": "msg",
    "thumbLabel": "true",
    "showTicks": "always",
    "min": 0,
    "max": "80",
    "step": 1,
    "className": "",
    "iconPrepend": "",
    "iconAppend": "",
    "color": "",
    "colorTrack": "",
    "colorThumb": "",
    "showTextField": false,
    "x": 1270,
    "y": 1520,
    "wires": [
      [
        "ca00336458be444c"
      ]
    ]
  },
  {
    "id": "4decdd61ac6d5363",
    "type": "ui-slider",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "group": "5bb06bcb4ba06d8f",
    "name": "Entladeleistung",
    "label": "Entladeleistung",
    "tooltip": "",
    "order": 5,
    "width": 0,
    "height": 0,
    "passthru": false,
    "outs": "end",
    "topic": "payload",
    "topicType": "msg",
    "thumbLabel": "true",
    "showTicks": "always",
    "min": 0,
    "max": "900",
    "step": "50",
    "className": "",
    "iconPrepend": "",
    "iconAppend": "",
    "color": "",
    "colorTrack": "",
    "colorThumb": "",
    "showTextField": false,
    "x": 1680,
    "y": 1340,
    "wires": [
      [
        "4886f8cda328f9d5"
      ]
    ]
  },
  {
    "id": "f6eac0146054350c",
    "type": "ui-text",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "e4ce3620984a6297",
    "order": 7,
    "width": 0,
    "height": 0,
    "name": "Discharge Flag",
    "label": "Discharge Flag",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#717171",
    "wrapText": false,
    "className": "",
    "value": "payload.discharge",
    "valueType": "msg",
    "x": 740,
    "y": 1200,
    "wires": []
  },
  {
    "id": "78d8a79da3d2d4f9",
    "type": "ui-text",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "e4ce3620984a6297",
    "order": 1,
    "width": 0,
    "height": 0,
    "name": "Akku leer",
    "label": "Akku leer",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#717171",
    "wrapText": false,
    "className": "",
    "value": "payload.batteryEmpty",
    "valueType": "msg",
    "x": 720,
    "y": 1240,
    "wires": []
  },
  {
    "id": "b2b1e0a152fe2643",
    "type": "ui-text",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "e4ce3620984a6297",
    "order": 4,
    "width": 0,
    "height": 0,
    "name": "Akku voll am Tag",
    "label": "Akku voll am Tag",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#717171",
    "wrapText": false,
    "className": "",
    "value": "payload.batteryFullDay",
    "valueType": "msg",
    "x": 750,
    "y": 1280,
    "wires": []
  },
  {
    "id": "f5c3bfc9f5f742e4",
    "type": "ui-text",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "e4ce3620984a6297",
    "order": 2,
    "width": 0,
    "height": 0,
    "name": "Notladen Flag",
    "label": "Notladen Flag",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#717171",
    "wrapText": false,
    "className": "",
    "value": "payload.notladen",
    "valueType": "msg",
    "x": 740,
    "y": 1320,
    "wires": []
  },
  {
    "id": "3e2dae51cef6f4ed",
    "type": "ui-text",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "2298ab4384ef3064",
    "order": 1,
    "width": 0,
    "height": 0,
    "name": "Netzbezug",
    "label": "Netzbezug",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#717171",
    "wrapText": false,
    "className": "",
    "value": "payload.Netzbezug",
    "valueType": "msg",
    "x": 730,
    "y": 1360,
    "wires": []
  },
  {
    "id": "8475ee084b591d4f",
    "type": "ui-text",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "2298ab4384ef3064",
    "order": 2,
    "width": 0,
    "height": 0,
    "name": "minSOC",
    "label": "minSOC",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#717171",
    "wrapText": false,
    "className": "",
    "value": "payload.minSOC",
    "valueType": "msg",
    "x": 720,
    "y": 1400,
    "wires": []
  },
  {
    "id": "abc7b30f7186251e",
    "type": "ui-text",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "2298ab4384ef3064",
    "order": 3,
    "width": 0,
    "height": 0,
    "name": "low_minVol",
    "label": "low_minVol",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#717171",
    "wrapText": false,
    "className": "",
    "value": "payload.low_minVol",
    "valueType": "msg",
    "x": 730,
    "y": 1440,
    "wires": []
  },
  {
    "id": "232238a5f4052046",
    "type": "ui-text",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "e4ce3620984a6297",
    "order": 3,
    "width": 0,
    "height": 0,
    "name": "Ist Nacht ??",
    "label": "Ist Nacht ??",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#717171",
    "wrapText": false,
    "className": "",
    "value": "payload.isNight",
    "valueType": "msg",
    "x": 730,
    "y": 1480,
    "wires": []
  },
  {
    "id": "842d17cdccf73119",
    "type": "ui-text",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "2298ab4384ef3064",
    "order": 5,
    "width": 0,
    "height": 0,
    "name": "Sonnenaufgang Offset",
    "label": "Sonnenaufgang Offset",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#717171",
    "wrapText": false,
    "className": "",
    "value": "payload.Sonnenaufgang_Offset",
    "valueType": "msg",
    "x": 760,
    "y": 1520,
    "wires": []
  },
  {
    "id": "1e78695467eab65d",
    "type": "ui-text",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "2298ab4384ef3064",
    "order": 4,
    "width": 0,
    "height": 0,
    "name": "Sonnenuntergang Offset",
    "label": "Sonnenuntergang Offset",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#717171",
    "wrapText": false,
    "className": "",
    "value": "payload.Sonnenuntergang_Offset",
    "valueType": "msg",
    "x": 770,
    "y": 1560,
    "wires": []
  },
  {
    "id": "77489b8f51357599",
    "type": "ui-text",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "e4ce3620984a6297",
    "order": 5,
    "width": 0,
    "height": 0,
    "name": "ByPass",
    "label": "ByPass",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#717171",
    "wrapText": false,
    "className": "",
    "value": "payload.ByPass_state",
    "valueType": "msg",
    "x": 720,
    "y": 1600,
    "wires": []
  },
  {
    "id": "9ca5f0de48314d53",
    "type": "ui-gauge",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "minVol",
    "group": "53e2e07223f8ac94",
    "order": 1,
    "value": "payload.minVol",
    "valueType": "msg",
    "width": "2",
    "height": "2",
    "gtype": "gauge-half",
    "gstyle": "needle",
    "title": "minVol",
    "alwaysShowTitle": false,
    "floatingTitlePosition": "top-left",
    "units": "V",
    "icon": "",
    "prefix": "",
    "suffix": "",
    "segments": [
      {
        "from": "2.8",
        "color": "#ea5353",
        "text": "",
        "textType": "label"
      },
      {
        "from": "3.2",
        "color": "#ffc800",
        "text": "",
        "textType": "label"
      },
      {
        "from": "3.6",
        "color": "#5cd65c",
        "text": "",
        "textType": "label"
      }
    ],
    "min": "2.8",
    "max": "3.65",
    "sizeThickness": 16,
    "sizeGap": 4,
    "sizeKeyThickness": 8,
    "styleRounded": true,
    "styleGlow": false,
    "className": "",
    "x": 990,
    "y": 1360,
    "wires": [
      []
    ]
  },
  {
    "id": "c374b333320a975d",
    "type": "ui-gauge",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "SOC",
    "group": "53e2e07223f8ac94",
    "order": 4,
    "value": "payload.SOC",
    "valueType": "msg",
    "width": "2",
    "height": "2",
    "gtype": "gauge-half",
    "gstyle": "needle",
    "title": "SOC",
    "alwaysShowTitle": false,
    "floatingTitlePosition": "top-left",
    "units": "%",
    "icon": "",
    "prefix": "",
    "suffix": "",
    "segments": [
      {
        "from": "0",
        "color": "#ea5353",
        "text": "",
        "textType": "value"
      },
      {
        "from": "50",
        "color": "#ffc800",
        "text": "",
        "textType": "value"
      },
      {
        "from": "100",
        "color": "#5cd65c",
        "text": "",
        "textType": "value"
      }
    ],
    "min": "0",
    "max": "100",
    "sizeThickness": 16,
    "sizeGap": 4,
    "sizeKeyThickness": 8,
    "styleRounded": true,
    "styleGlow": false,
    "className": "",
    "x": 990,
    "y": 1400,
    "wires": [
      []
    ]
  },
  {
    "id": "5099dd41ddabf7bb",
    "type": "ui-gauge",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "minVol1",
    "group": "53e2e07223f8ac94",
    "order": 2,
    "value": "payload.minVol1",
    "valueType": "msg",
    "width": "2",
    "height": "2",
    "gtype": "gauge-half",
    "gstyle": "needle",
    "title": "minVol1",
    "alwaysShowTitle": false,
    "floatingTitlePosition": "top-left",
    "units": "V",
    "icon": "",
    "prefix": "",
    "suffix": "",
    "segments": [
      {
        "from": "2.8",
        "color": "#ea5353",
        "text": "",
        "textType": "label"
      },
      {
        "from": "3.2",
        "color": "#ffc800",
        "text": "",
        "textType": "label"
      },
      {
        "from": "3.6",
        "color": "#5cd65c",
        "text": "",
        "textType": "label"
      }
    ],
    "min": "2.8",
    "max": "3.65",
    "sizeThickness": 16,
    "sizeGap": 4,
    "sizeKeyThickness": 8,
    "styleRounded": true,
    "styleGlow": false,
    "className": "",
    "x": 1000,
    "y": 1440,
    "wires": [
      []
    ]
  },
  {
    "id": "22fa1c7241a6242e",
    "type": "ui-gauge",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "minVol2",
    "group": "53e2e07223f8ac94",
    "order": 3,
    "value": "payload.minVol2",
    "valueType": "msg",
    "width": "2",
    "height": "2",
    "gtype": "gauge-half",
    "gstyle": "needle",
    "title": "minVol2",
    "alwaysShowTitle": false,
    "floatingTitlePosition": "top-left",
    "units": "V",
    "icon": "",
    "prefix": "",
    "suffix": "",
    "segments": [
      {
        "from": "2.8",
        "color": "#ea5353",
        "text": "",
        "textType": "label"
      },
      {
        "from": "3.2",
        "color": "#ffc800",
        "text": "",
        "textType": "label"
      },
      {
        "from": "3.6",
        "color": "#5cd65c",
        "text": "",
        "textType": "label"
      }
    ],
    "min": "2.8",
    "max": "3.65",
    "sizeThickness": 16,
    "sizeGap": 4,
    "sizeKeyThickness": 8,
    "styleRounded": true,
    "styleGlow": false,
    "className": "",
    "x": 1000,
    "y": 1480,
    "wires": [
      []
    ]
  },
  {
    "id": "742f006403ed2de5",
    "type": "ui-gauge",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "minVol3",
    "group": "53e2e07223f8ac94",
    "order": 5,
    "value": "payload.minVol3",
    "valueType": "msg",
    "width": "2",
    "height": "2",
    "gtype": "gauge-half",
    "gstyle": "needle",
    "title": "minVol3",
    "alwaysShowTitle": false,
    "floatingTitlePosition": "top-left",
    "units": "V",
    "icon": "",
    "prefix": "",
    "suffix": "",
    "segments": [
      {
        "from": "2.8",
        "color": "#ea5353",
        "text": "",
        "textType": "label"
      },
      {
        "from": "3.2",
        "color": "#ffc800",
        "text": "",
        "textType": "label"
      },
      {
        "from": "3.6",
        "color": "#5cd65c",
        "text": "",
        "textType": "label"
      }
    ],
    "min": "2.8",
    "max": "3.65",
    "sizeThickness": 16,
    "sizeGap": 4,
    "sizeKeyThickness": 8,
    "styleRounded": true,
    "styleGlow": false,
    "className": "",
    "x": 1000,
    "y": 1520,
    "wires": [
      []
    ]
  },
  {
    "id": "bdad696b1703abbc",
    "type": "ui-gauge",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "minVol4",
    "group": "53e2e07223f8ac94",
    "order": 6,
    "value": "payload.minVol4",
    "valueType": "msg",
    "width": "2",
    "height": "2",
    "gtype": "gauge-half",
    "gstyle": "needle",
    "title": "minVol4",
    "alwaysShowTitle": false,
    "floatingTitlePosition": "top-left",
    "units": "V",
    "icon": "",
    "prefix": "",
    "suffix": "",
    "segments": [
      {
        "from": "2.8",
        "color": "#ea5353",
        "text": "",
        "textType": "label"
      },
      {
        "from": "3.2",
        "color": "#ffc800",
        "text": "",
        "textType": "label"
      },
      {
        "from": "3.6",
        "color": "#5cd65c",
        "text": "",
        "textType": "label"
      }
    ],
    "min": "2.8",
    "max": "3.65",
    "sizeThickness": 16,
    "sizeGap": 4,
    "sizeKeyThickness": 8,
    "styleRounded": true,
    "styleGlow": false,
    "className": "",
    "x": 1000,
    "y": 1560,
    "wires": [
      []
    ]
  },
  {
    "id": "097b3879e9905dd0",
    "type": "ui-switch",
    "z": "d9a9ebbb2cc5d793",
    "g": "d203ce4383ee9132",
    "name": "Schlecht Wetter",
    "label": "Schlecht Wetter",
    "group": "742c66c7811281cc",
    "order": 3,
    "width": 0,
    "height": 0,
    "passthru": false,
    "decouple": true,
    "topic": "topic",
    "topicType": "msg",
    "style": "",
    "className": "",
    "layout": "row-spread",
    "clickableArea": "switch",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "x": 1420,
    "y": 1960,
    "wires": [
      [
        "08b0b51986cb1553",
        "1c5f2b1531c276dd",
        "b9200dcfd6413b8d"
      ]
    ]
  },
  {
    "id": "0c0797302b95074c",
    "type": "ui-button",
    "z": "d9a9ebbb2cc5d793",
    "g": "ba4e364f0c1f0541",
    "group": "742c66c7811281cc",
    "name": "Flow Initial",
    "label": "Flow Initial",
    "order": 6,
    "width": 0,
    "height": 0,
    "emulateClick": false,
    "tooltip": "",
    "color": "",
    "bgcolor": "",
    "className": "",
    "icon": "",
    "iconPosition": "left",
    "payload": "",
    "payloadType": "date",
    "topic": "topic",
    "topicType": "msg",
    "buttonColor": "",
    "textColor": "",
    "iconColor": "",
    "enableClick": true,
    "enablePointerdown": false,
    "pointerdownPayload": "",
    "pointerdownPayloadType": "str",
    "enablePointerup": false,
    "pointerupPayload": "",
    "pointerupPayloadType": "str",
    "x": 710,
    "y": 140,
    "wires": [
      [
        "cfdbab4862ea8893"
      ]
    ]
  },
  {
    "id": "bb5d623c76fdd01c",
    "type": "ui-slider",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "group": "5bb06bcb4ba06d8f",
    "name": "low_minVol",
    "label": "low_minVol",
    "tooltip": "",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": false,
    "outs": "end",
    "topic": "payload",
    "topicType": "msg",
    "thumbLabel": "true",
    "showTicks": "always",
    "min": "3.1",
    "max": "3.3",
    "step": "0.05",
    "className": "",
    "iconPrepend": "",
    "iconAppend": "",
    "color": "",
    "colorTrack": "",
    "colorThumb": "",
    "showTextField": false,
    "x": 1670,
    "y": 1400,
    "wires": [
      [
        "60a8824d97a1f5d4"
      ]
    ]
  },
  {
    "id": "60a8824d97a1f5d4",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "low_minVol",
    "rules": [
      {
        "t": "set",
        "p": "zendure.config.low_minVol",
        "pt": "global",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1850,
    "y": 1400,
    "wires": [
      []
    ]
  },
  {
    "id": "100be03b618ed8b6",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Aktuell low_minVol",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "zendure.config.low_minVol",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1450,
    "y": 1400,
    "wires": [
      [
        "bb5d623c76fdd01c"
      ]
    ]
  },
  {
    "id": "9b0013540d5273c2",
    "type": "ui-chart",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "4f17c42cf0045f5b",
    "name": "PV Produktion",
    "label": "PV Produktion",
    "order": 1,
    "chartType": "line",
    "category": "topic",
    "categoryType": "msg",
    "xAxisLabel": "",
    "xAxisProperty": "",
    "xAxisPropertyType": "timestamp",
    "xAxisType": "time",
    "xAxisFormat": "",
    "xAxisFormatType": "auto",
    "xmin": "",
    "xmax": "",
    "yAxisLabel": "",
    "yAxisProperty": "payload",
    "yAxisPropertyType": "msg",
    "ymin": "",
    "ymax": "",
    "bins": 10,
    "action": "append",
    "stackSeries": false,
    "pointShape": "dash",
    "pointRadius": "1",
    "showLegend": true,
    "removeOlder": "6",
    "removeOlderUnit": "3600",
    "removeOlderPoints": "1000",
    "colors": [
      "#0095ff",
      "#ff0000",
      "#ff7f0e",
      "#2ca02c",
      "#a347e1",
      "#d62728",
      "#ff9896",
      "#9467bd",
      "#c5b0d5"
    ],
    "textColor": [
      "#ffffff"
    ],
    "textColorDefault": false,
    "gridColor": [
      "#45494f"
    ],
    "gridColorDefault": false,
    "width": 3,
    "height": 4,
    "className": "",
    "interpolation": "smooth",
    "x": 980,
    "y": 1720,
    "wires": [
      []
    ]
  },
  {
    "id": "dbe533e821a704ff",
    "type": "ui-chart",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "4f17c42cf0045f5b",
    "name": "AC-Power",
    "label": "AC Power",
    "order": 2,
    "chartType": "line",
    "category": "topic",
    "categoryType": "msg",
    "xAxisLabel": "",
    "xAxisProperty": "",
    "xAxisPropertyType": "timestamp",
    "xAxisType": "time",
    "xAxisFormat": "",
    "xAxisFormatType": "auto",
    "xmin": "",
    "xmax": "",
    "yAxisLabel": "",
    "yAxisProperty": "payload",
    "yAxisPropertyType": "msg",
    "ymin": "",
    "ymax": "",
    "bins": 10,
    "action": "append",
    "stackSeries": false,
    "pointShape": "dash",
    "pointRadius": "1",
    "showLegend": true,
    "removeOlder": "12",
    "removeOlderUnit": "3600",
    "removeOlderPoints": "1000",
    "colors": [
      "#0095ff",
      "#ff0000",
      "#ff7f0e",
      "#2ca02c",
      "#a347e1",
      "#d62728",
      "#ff9896",
      "#9467bd",
      "#c5b0d5"
    ],
    "textColor": [
      "#ffffff"
    ],
    "textColorDefault": false,
    "gridColor": [
      "#45494f"
    ],
    "gridColorDefault": false,
    "width": 3,
    "height": 4,
    "className": "",
    "interpolation": "smooth",
    "x": 970,
    "y": 1760,
    "wires": [
      []
    ]
  },
  {
    "id": "ada68241acb24f6d",
    "type": "ui-slider",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "group": "5bb06bcb4ba06d8f",
    "name": "Hysterese SOC nach leerem Akku",
    "label": "Hysterese nach Akku leer",
    "tooltip": "",
    "order": 1,
    "width": 0,
    "height": 0,
    "passthru": false,
    "outs": "end",
    "topic": "topic",
    "topicType": "msg",
    "thumbLabel": "true",
    "showTicks": "always",
    "min": "15",
    "max": "50",
    "step": "5",
    "className": "",
    "iconPrepend": "",
    "iconAppend": "",
    "color": "",
    "colorTrack": "",
    "colorThumb": "",
    "showTextField": false,
    "x": 1540,
    "y": 1640,
    "wires": [
      [
        "b5ba9d7fa569f9fd"
      ]
    ]
  },
  {
    "id": "b5ba9d7fa569f9fd",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Setze Hysterese nach Akku leer",
    "rules": [
      {
        "t": "set",
        "p": "zendure.config.Hysteresis_After_Empty",
        "pt": "global",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1850,
    "y": 1640,
    "wires": [
      []
    ]
  },
  {
    "id": "be3851d2332f725b",
    "type": "function",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "Collect Global SOC",
    "func": "// AC-Wert aus dem globalen Kontext holen\nlet value = global.get(\"zendure.SOC\");\n\n// Falls der Wert kein echter Zahlentyp ist, umwandeln\nvalue = Number(value);\n\n// Nachricht f√ºr den Chart aufbereiten\nmsg.payload = value;            // reine Zahl als Payload\nmsg.timestamp = Date.now();     // Zeitstempel f√ºr den Chart\nmsg.topic = \"SOC\";         // Serienname im Chart (optional)\n\n// Nachricht zur√ºckgeben\nreturn msg;\n",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 400,
    "y": 1800,
    "wires": [
      [
        "0b5e05bf32a0e3c3"
      ]
    ]
  },
  {
    "id": "0b5e05bf32a0e3c3",
    "type": "ui-chart",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "4f17c42cf0045f5b",
    "name": "SOC",
    "label": "SOC",
    "order": 6,
    "chartType": "line",
    "category": "topic",
    "categoryType": "msg",
    "xAxisLabel": "",
    "xAxisProperty": "",
    "xAxisPropertyType": "timestamp",
    "xAxisType": "time",
    "xAxisFormat": "",
    "xAxisFormatType": "auto",
    "xmin": "",
    "xmax": "",
    "yAxisLabel": "",
    "yAxisProperty": "payload",
    "yAxisPropertyType": "msg",
    "ymin": "",
    "ymax": "",
    "bins": 10,
    "action": "append",
    "stackSeries": false,
    "pointShape": "dash",
    "pointRadius": "1",
    "showLegend": true,
    "removeOlder": "12",
    "removeOlderUnit": "3600",
    "removeOlderPoints": "1000",
    "colors": [
      "#0095ff",
      "#ff0000",
      "#ff7f0e",
      "#2ca02c",
      "#a347e1",
      "#d62728",
      "#ff9896",
      "#9467bd",
      "#c5b0d5"
    ],
    "textColor": [
      "#ffffff"
    ],
    "textColorDefault": false,
    "gridColor": [
      "#45494f"
    ],
    "gridColorDefault": false,
    "width": 6,
    "height": 4,
    "className": "",
    "interpolation": "smooth",
    "x": 940,
    "y": 1800,
    "wires": [
      []
    ]
  },
  {
    "id": "17028d61d39d2447",
    "type": "function",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "Collect Global Netzbezug",
    "func": "// AC-Wert aus dem globalen Kontext holen\nlet value = global.get(\"zendure.Netzbezug\");\n\n// Falls der Wert kein echter Zahlentyp ist, umwandeln\nvalue = Number(value);\n\n// Nachricht f√ºr den Chart aufbereiten\nmsg.payload = value;            // reine Zahl als Payload\nmsg.timestamp = Date.now();     // Zeitstempel f√ºr den Chart\nmsg.topic = \"Netzbezug\";        // Serienname im Chart (optional)\n\n// Nachricht zur√ºckgeben\nreturn msg;\n",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 420,
    "y": 1840,
    "wires": [
      [
        "6f618367815ec2a2"
      ]
    ]
  },
  {
    "id": "6f618367815ec2a2",
    "type": "ui-chart",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "4f17c42cf0045f5b",
    "name": "Netzbezug",
    "label": "Netzbezug",
    "order": 3,
    "chartType": "line",
    "category": "topic",
    "categoryType": "msg",
    "xAxisLabel": "",
    "xAxisProperty": "",
    "xAxisPropertyType": "timestamp",
    "xAxisType": "time",
    "xAxisFormat": "",
    "xAxisFormatType": "auto",
    "xmin": "",
    "xmax": "",
    "yAxisLabel": "",
    "yAxisProperty": "payload",
    "yAxisPropertyType": "msg",
    "ymin": "",
    "ymax": "",
    "bins": 10,
    "action": "append",
    "stackSeries": false,
    "pointShape": "dash",
    "pointRadius": "1",
    "showLegend": true,
    "removeOlder": "12",
    "removeOlderUnit": "3600",
    "removeOlderPoints": "1000",
    "colors": [
      "#0095ff",
      "#ff0000",
      "#ff7f0e",
      "#2ca02c",
      "#a347e1",
      "#d62728",
      "#ff9896",
      "#9467bd",
      "#c5b0d5"
    ],
    "textColor": [
      "#ffffff"
    ],
    "textColorDefault": false,
    "gridColor": [
      "#45494f"
    ],
    "gridColorDefault": false,
    "width": 6,
    "height": 4,
    "className": "",
    "interpolation": "smooth",
    "x": 960,
    "y": 1840,
    "wires": [
      []
    ]
  },
  {
    "id": "45d1c19859e26856",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Hystere nach Akku leer",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "zendure.config.Hysteresis_After_Empty",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1270,
    "y": 1640,
    "wires": [
      [
        "ada68241acb24f6d"
      ]
    ]
  },
  {
    "id": "b9200dcfd6413b8d",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "d203ce4383ee9132",
    "name": "Schlecht Wetter flag",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.badweatherflag",
        "pt": "global",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1680,
    "y": 2100,
    "wires": [
      []
    ]
  },
  {
    "id": "93a84d70491859ef",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "d203ce4383ee9132",
    "name": "Bad Weather ?",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "zendure.control.badweatherflag",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1240,
    "y": 1960,
    "wires": [
      [
        "097b3879e9905dd0"
      ]
    ]
  },
  {
    "id": "a0b3d0cea1ae6b55",
    "type": "ui-text",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "e4ce3620984a6297",
    "order": 6,
    "width": 0,
    "height": 0,
    "name": "Schlecht Wetter ?",
    "label": "Schlecht Wetter ?",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#717171",
    "wrapText": false,
    "className": "",
    "value": "payload.badWeather",
    "valueType": "msg",
    "x": 750,
    "y": 1640,
    "wires": []
  },
  {
    "id": "dd3c0921ccb90c6d",
    "type": "function",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "Eingang Akku",
    "func": "// AC-Wert aus dem globalen Kontext holen\nlet value = global.get(\"zendure.BatteryIn\");\n\n// Falls der Wert kein echter Zahlentyp ist, umwandeln\nvalue = Number(value);\n\n// Nachricht f√ºr den Chart aufbereiten\nmsg.payload = value;            // reine Zahl als Payload\nmsg.timestamp = Date.now();     // Zeitstempel f√ºr den Chart\nmsg.topic = \"Akkueingang\";        // Serienname im Chart (optional)\n\n// Nachricht zur√ºckgeben\nreturn msg;\n",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 400,
    "y": 1880,
    "wires": [
      [
        "9a176a3d185df588"
      ]
    ]
  },
  {
    "id": "9a176a3d185df588",
    "type": "ui-chart",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "4f17c42cf0045f5b",
    "name": "Akkueingang",
    "label": "Akkueingang",
    "order": 4,
    "chartType": "line",
    "category": "topic",
    "categoryType": "msg",
    "xAxisLabel": "",
    "xAxisProperty": "",
    "xAxisPropertyType": "timestamp",
    "xAxisType": "time",
    "xAxisFormat": "",
    "xAxisFormatType": "auto",
    "xmin": "",
    "xmax": "",
    "yAxisLabel": "",
    "yAxisProperty": "payload",
    "yAxisPropertyType": "msg",
    "ymin": "",
    "ymax": "",
    "bins": 10,
    "action": "append",
    "stackSeries": false,
    "pointShape": "dash",
    "pointRadius": "1",
    "showLegend": true,
    "removeOlder": "12",
    "removeOlderUnit": "3600",
    "removeOlderPoints": "1000",
    "colors": [
      "#0095ff",
      "#ff0000",
      "#ff7f0e",
      "#2ca02c",
      "#a347e1",
      "#d62728",
      "#ff9896",
      "#9467bd",
      "#c5b0d5"
    ],
    "textColor": [
      "#ffffff"
    ],
    "textColorDefault": false,
    "gridColor": [
      "#45494f"
    ],
    "gridColorDefault": false,
    "width": 3,
    "height": 4,
    "className": "",
    "interpolation": "smooth",
    "x": 970,
    "y": 1880,
    "wires": [
      []
    ]
  },
  {
    "id": "6e8a092f7e0d8e53",
    "type": "function",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "name": "Ausgang Akku",
    "func": "// AC-Wert aus dem globalen Kontext holen\nlet value = global.get(\"zendure.BatteryOut\");\n\n// Falls der Wert kein echter Zahlentyp ist, umwandeln\nvalue = Number(value);\n\n// Nachricht f√ºr den Chart aufbereiten\nmsg.payload = value;            // reine Zahl als Payload\nmsg.timestamp = Date.now();     // Zeitstempel f√ºr den Chart\nmsg.topic = \"Akkuausgang\";        // Serienname im Chart (optional)\n\n// Nachricht zur√ºckgeben\nreturn msg;\n",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 400,
    "y": 1920,
    "wires": [
      [
        "dad7c92a93c9ae84"
      ]
    ]
  },
  {
    "id": "dad7c92a93c9ae84",
    "type": "ui-chart",
    "z": "d9a9ebbb2cc5d793",
    "g": "6005b99a01f638ab",
    "group": "4f17c42cf0045f5b",
    "name": "Akkuausgang",
    "label": "Akkuausgang",
    "order": 5,
    "chartType": "line",
    "category": "topic",
    "categoryType": "msg",
    "xAxisLabel": "",
    "xAxisProperty": "",
    "xAxisPropertyType": "timestamp",
    "xAxisType": "time",
    "xAxisFormat": "",
    "xAxisFormatType": "auto",
    "xmin": "",
    "xmax": "",
    "yAxisLabel": "",
    "yAxisProperty": "payload",
    "yAxisPropertyType": "msg",
    "ymin": "",
    "ymax": "",
    "bins": 10,
    "action": "append",
    "stackSeries": false,
    "pointShape": "dash",
    "pointRadius": "1",
    "showLegend": true,
    "removeOlder": "12",
    "removeOlderUnit": "3600",
    "removeOlderPoints": "1000",
    "colors": [
      "#0095ff",
      "#ff0000",
      "#ff7f0e",
      "#2ca02c",
      "#a347e1",
      "#d62728",
      "#ff9896",
      "#9467bd",
      "#c5b0d5"
    ],
    "textColor": [
      "#ffffff"
    ],
    "textColorDefault": false,
    "gridColor": [
      "#45494f"
    ],
    "gridColorDefault": false,
    "width": 3,
    "height": 4,
    "className": "",
    "interpolation": "smooth",
    "x": 980,
    "y": 1920,
    "wires": [
      []
    ]
  },
  {
    "id": "85c9317a2ad13265",
    "type": "ui-switch",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Nur laden!",
    "label": "Nur laden!",
    "group": "742c66c7811281cc",
    "order": 0,
    "width": 0,
    "height": 0,
    "passthru": false,
    "decouple": true,
    "topic": "topic",
    "topicType": "msg",
    "style": "",
    "className": "",
    "layout": "row-spread",
    "clickableArea": "switch",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "x": 1450,
    "y": 1700,
    "wires": [
      [
        "0f282ca693431566"
      ]
    ]
  },
  {
    "id": "095d5dc9e8bb6a32",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Nur laden Flag ?",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "zendure.control.nur_laden_flag",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1250,
    "y": 1700,
    "wires": [
      [
        "85c9317a2ad13265"
      ]
    ]
  },
  {
    "id": "0f282ca693431566",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Nur laden Flag setzen",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.nur_laden_flag",
        "pt": "global",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1660,
    "y": 1700,
    "wires": [
      []
    ]
  },
  {
    "id": "5dbecd11ccf8bb59",
    "type": "ui-switch",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Manuelles Notladen",
    "label": "Manuelles Notladen",
    "group": "742c66c7811281cc",
    "order": 4,
    "width": 0,
    "height": 0,
    "passthru": false,
    "decouple": false,
    "topic": "topic",
    "topicType": "msg",
    "style": "",
    "className": "",
    "layout": "row-spread",
    "clickableArea": "switch",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "x": 1480,
    "y": 1760,
    "wires": [
      [
        "f85d7950ff76472c"
      ]
    ]
  },
  {
    "id": "65635f84f5a27757",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Notladen manuell?",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "zendure.control.notladen_manuell_flag",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1250,
    "y": 1760,
    "wires": [
      [
        "5dbecd11ccf8bb59"
      ]
    ]
  },
  {
    "id": "f85d7950ff76472c",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Notladen manuell?",
    "rules": [
      {
        "t": "set",
        "p": "zendure.control.notladen_manuell_flag",
        "pt": "global",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1710,
    "y": 1760,
    "wires": [
      []
    ]
  },
  {
    "id": "17b0c5e2eded2f17",
    "type": "change",
    "z": "d9a9ebbb2cc5d793",
    "g": "cca5434451ae61d9",
    "name": "Empty Flag true",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "zendure.control.BATTERY_EMPTY_flag",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1240,
    "y": 1820,
    "wires": [
      [
        "13e2c84154dc6cc5"
      ]
    ]
  },
  {
    "id": "e4ce3620984a6297",
    "type": "ui-group",
    "name": "Flags",
    "page": "2288955db1925a37",
    "width": "6",
    "height": "1",
    "order": 2,
    "showTitle": true,
    "className": "",
    "visible": "true",
    "disabled": "false",
    "groupType": "default"
  },
  {
    "id": "2298ab4384ef3064",
    "type": "ui-group",
    "name": "Werte",
    "page": "2288955db1925a37",
    "width": "6",
    "height": "1",
    "order": 1,
    "showTitle": true,
    "className": "",
    "visible": "true",
    "disabled": "false",
    "groupType": "default"
  },
  {
    "id": "53e2e07223f8ac94",
    "type": "ui-group",
    "name": "Einzelwerte",
    "page": "d202804fe8169075",
    "width": "6",
    "height": "1",
    "order": 2,
    "showTitle": true,
    "className": "",
    "visible": "true",
    "disabled": "false",
    "groupType": "default"
  },
  {
    "id": "4f17c42cf0045f5b",
    "type": "ui-group",
    "name": "Graphen",
    "page": "d202804fe8169075",
    "width": "6",
    "height": "1",
    "order": 1,
    "showTitle": true,
    "className": "",
    "visible": "true",
    "disabled": "false",
    "groupType": "default"
  },
  {
    "id": "2288955db1925a37",
    "type": "ui-page",
    "name": "Zendure-Status",
    "ui": "7bc5187fae6c8993",
    "path": "/page3",
    "icon": "home",
    "layout": "grid",
    "theme": "f89371bfc5dd5a0e",
    "breakpoints": [
      {
        "name": "Default",
        "px": "0",
        "cols": "3"
      },
      {
        "name": "Tablet",
        "px": "576",
        "cols": "6"
      },
      {
        "name": "Small Desktop",
        "px": "768",
        "cols": "9"
      },
      {
        "name": "Desktop",
        "px": "1024",
        "cols": "12"
      }
    ],
    "order": 1,
    "className": "",
    "visible": true,
    "disabled": false
  },
  {
    "id": "d202804fe8169075",
    "type": "ui-page",
    "name": "Live-Werte",
    "ui": "7bc5187fae6c8993",
    "path": "/page2",
    "icon": "home",
    "layout": "grid",
    "theme": "f89371bfc5dd5a0e",
    "breakpoints": [
      {
        "name": "Default",
        "px": "0",
        "cols": "4"
      },
      {
        "name": "Tablet",
        "px": "576",
        "cols": "6"
      },
      {
        "name": "Small Desktop",
        "px": "768",
        "cols": "9"
      },
      {
        "name": "Desktop",
        "px": "1024",
        "cols": "12"
      }
    ],
    "order": 3,
    "className": "",
    "visible": "true",
    "disabled": "false"
  }
]
